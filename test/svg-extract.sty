%%
%% This is file `svg-extract.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% svg.dtx  (with options: `package,identify,extract')
%% svg.dtx  (with options: `package,base,extract')
%% svg.dtx  (with options: `package,option,extract')
%% svg.dtx  (with options: `package,standalone,extract')
%% svg.dtx  (with options: `package,body,extract')
%% 
%% svg-extract -- Extract independent graphic files from SVG pictures
%% 
%% ----------------------------------------------------------------------------
%%
%% Copyright (C) Philip Ilten <philten@cern.ch>, 2012-2016
%% Copyright (C) Falk Hanisch <hanisch.latex@outlook.com>, 2017-2021
%%
%% ----------------------------------------------------------------------------
%%
%% This work may be distributed and/or modified under the conditions
%% of the LaTeX Project Public License, version 1.3c of the license.
%% The latest version of this license is in
%%     http://www.latex-project.org/lppl.txt
%% and version 1.3c or later is part of all distributions of
%% LaTeX 2005/12/01 or later and of this work.
%%
%% This work has the LPPL maintenance status "author-maintained".
%%
%% The current maintainer and author of this work is Falk Hanisch.
%%
%% This work consists of README.md, LICENSE.md, the main source file svg.dtx
%% and the derived documentation svg.pdf as well as the example files
%% svg-example.svg, svg-preamble.tex and root.C (with derived file root.svg).
%%
%% ----------------------------------------------------------------------------
%%
\NeedsTeXFormat{LaTeX2e}[2020-02-02]
\begingroup
  \catcode`\@11\relax%
  \def\svg@Provides#1#2[#3]{%
    \def\@tempa{\def\svg@version{#3}}%
    \ifx\svg@version\@undefined\else%
      \def\@tempb{#3}%
      \ifx\svg@version\@tempb\else%
        \def\@tempa{%
          \@latex@warning@no@line{%
            The version of package `#1' is `#3',\MessageBreak%
            but `\svg@version' was expected!\MessageBreak%
            You should update the svg bundle%
          }%
        }%
      \fi%
    \fi%
    \edef\@tempb{%
      \endgroup%
      \noexpand\ProvidesPackage%
      {#1}[#3\space(#2)]%
      \noexpand\RequirePackage{svg}[#3]%
      \unexpanded\expandafter{\@tempa}%
    }%
  }%
  \svg@Provides%
  {svg-extract}{extract graphics from SVG pictures}%
  [2020/06/23 v2.03]%
\@tempb
\svg@catcodes@set
\AtEndOfPackage{\svg@catcodes@restore}
\newcommand*\svgx@ifvalueisinherit[1]{%
  \begingroup%
    \def\svg@tempa{#1}%
    \def\svg@tempb{inherit}%
    \ifx\svg@tempa\svg@tempb%
      \aftergroup\@firstoftwo%
    \else%
      \aftergroup\@secondoftwo%
    \fi%
  \endgroup%
}
\newcommand*\svgx@@ifkeyandval{}
\newcommand*\svgx@ifkeyandval[3]{%
  \def\svgx@@ifkeyandval##1=##2=##3\@nil{\IfArgIsEmpty{##3}{#3}{#2}}%
  \svgx@@ifkeyandval#1==\@nil%
}
\svg@newtoks\svgx@afterdocument@toks
\newcommand*\svgx@afterdocument@xaddto[1]{%
  \begingroup%
    \edef\svg@tempa{%
      \endgroup%
      \global\noexpand\addto@hook\noexpand\svgx@afterdocument@toks{#1}%
    }%
  \svg@tempa%
}
\newcommand*\svgx@afterdocument@append{%
  \expandafter\AfterReadingMainAux\expandafter{\the\svgx@afterdocument@toks}%
  \global\svgx@afterdocument@toks{}%
}
\newcommand*\svgx@normalize@list[1]{%
  \begingroup%
    \edef\svg@tempa{%
      \endgroup%
      \unexpanded{\svgx@@normalize@list#1}{\unexpanded\expandafter{#1}}%
    }%
  \svg@tempa%
}
\newcommand*\svgx@@normalize@list[2]{%
  \begingroup%
    \let\svg@tempb\@empty%
    \@for\svg@tempa:={,#2}\do{%
      % TODO use trim@spaces@in?
      \edef\svg@tempa{\expandafter\trim@spaces@noexp\expandafter{\svg@tempa}}%
      \ifx\svg@tempa\@empty\else%
        \edef\svg@tempa{%
          \unexpanded{\l@addto@macro\svg@tempb}{%
            ,\unexpanded\expandafter{\svg@tempa}%
          }%
        }\svg@tempa%
      \fi%
    }%
    \ifx\svg@tempb\@empty%
      \def\svg@tempa{%
        \endgroup%
        \let#1\@empty%
      }%
    \else%
      \def\svg@tempa,##1\@nil{%
        \def\svg@tempa{%
          \endgroup%
          \def#1{##1}%
        }%
      }%
      \expandafter\svg@tempa\svg@tempb\@nil%
    \fi%
  \svg@tempa%
}
\newcommand*\svgx@ifinlist[2]{%
  \begingroup%
    \edef\svg@tempa{%
      \endgroup%
      \noexpand\svgx@@ifinlist{#1}{#2}%
    }%
  \svg@tempa%
}
\newcommand*\svgx@@ifinlist[2]{%
  \begingroup%
    \edef\svg@tempa{%
      \def\noexpand\svg@tempa####1,\detokenize{#2},####2\noexpand\@nil{%
        \def\noexpand\svg@tempb{####2}%
      }%
      \def\noexpand\svg@tempb{%
        ,\detokenize{#1},\detokenize{#2},%
      }%
    }%
    \svg@tempa%
    \expandafter\svg@tempa\svg@tempb\@nil%
    \ifx\svg@tempb\@empty%
      \aftergroup\@secondoftwo%
    \else%
      \aftergroup\@firstoftwo%
    \fi%
  \endgroup%
}
\newcommand*\svgx@remove@key@list[2]{%
  \begingroup%
    \let\svg@tempb\@empty%
    \def\svg@tempa##1,#2##2,##3\@nil{%
      \l@addto@macro\svg@tempb{##1}%
      \IfArgIsEmpty{##3}{}{%
        \@svg@tempswafalse%
        \IfArgIsEmpty{##2}{}{\Ifstrstart{##2}{=}{}{\@svg@tempswatrue}}%
        \if@svg@tempswa%
          \l@addto@macro\svg@tempb{,#2##2}%
        \fi%
        \svg@tempa,##3\@nil%
      }%
    }%
    \expandafter\svg@tempa\expandafter,#1,#2,\@nil%
    \svgx@normalize@list{\svg@tempb}%
    \edef\svg@tempa{%
      \endgroup%
      \def\noexpand#1{\unexpanded\expandafter{\svg@tempb}}%
    }%
  \svg@tempa%
}
\DefineFamily{SVG}
\DefineFamilyMember{SVG}
\newcommand*\svgx@extr@mode{1}
\DefineFamilyKey{SVG}{extract}[true]{%
  \FamilySetNumerical{SVG}{extract}{svg@tempa}{%
    {false}{0},{off}{0},{no}{0},%
    {true}{1},{on}{1},{yes}{1},{auto}{1},{onlynewer}{1},{newer}{1},%
    {forced}{2},{force}{2},{overwrite}{2},%
    {pdf}{3},{PDF}{3},{eps}{4},{EPS}{4},{ps}{5},{PS}{5}%
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\svg@tempa\relax% false
      \def\svgx@extr@mode{0}%
    \or% true
      % TODO Warning! check when executed?
      \ifx\svg@IfFileNewer\@undefined%
        \def\svgx@extr@mode{2}%
      \else%
        \def\svgx@extr@mode{1}%
      \fi%
    \or% forced
      \def\svgx@extr@mode{2}%
    \or% pdf
      \FamilyOptions{SVG}{extractformat=pdf}%
    \or% eps
      \FamilyOptions{SVG}{extractformat=eps}%
    \or% ps
      \FamilyOptions{SVG}{extractformat=ps}%
    \fi%
  \fi%
}
\DeclareOption{on}{\AtEndOfPackage{\FamilyOptions{SVG}{extract=forced}}}
\DeclareOption{forced}{\AtEndOfPackage{\FamilyOptions{SVG}{extract=forced}}}
\DeclareOption{auto}{\AtEndOfPackage{\FamilyOptions{SVG}{extract=true}}}
\DeclareOption{off}{\AtEndOfPackage{\FamilyOptions{SVG}{extract=false}}}
\svg@ifdvimode{
  \newcommand*\svgx@extr@format{eps}
}{
  \newcommand*\svgx@extr@format{pdf}
}
\DefineFamilyKey{SVG}{extractformat}{%
  \svg@lowercase[{#1}]{\svgx@extr@format}%
  \svgx@normalize@list{\svgx@extr@format}%
  \let\svg@tempb\@empty%
  \@for\svg@tempa:=\svgx@extr@format\do{%
    \svgx@ifinlist{pdf,ps,eps}{\svg@tempa}{}{%
      \edef\svg@tempb{\svg@tempb,\svg@tempa}%
      \edef\svg@tempa{%
        \unexpanded{\svgx@remove@key@list{\svgx@extr@format}}{\svg@tempa}%
      }%
      \svg@tempa%
    }%
  }%
  \ifx\svg@tempb\@empty\else%
    \svgx@normalize@list{\svg@tempb}%
    \PackageWarning{svg-extract}{%
      The format(s) `\svg@tempb'are invalid. \MessageBreak%
      Only formats `pdf,ps,eps' are supported, so\MessageBreak%
      `exportformat=\svgx@extr@format' was set%
    }%
  \fi%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{SVG}{pdf}[true]{%
  \FamilySetBool{SVG}{pdf}{@svg@tempswa}{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \if@svg@tempswa%
      \ifx\svgx@extr@format\@empty%
        \def\svgx@extr@format{pdf}%
      \else%
        \svgx@ifinlist{\svgx@extr@format}{pdf}{}{%
          \edef\svgx@extr@format{\svgx@extr@format,pdf}%
        }%
      \fi%
      \svg@deprecated@key[svg-extract]{pdf}{extractformat={\svgx@extr@format}}%
    \else%
      \FamilyKeyStateUnknownValue%
    \fi%
  \fi%
}
\DefineFamilyKey{SVG}{eps}[true]{%
  \FamilySetBool{SVG}{eps}{@svg@tempswa}{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \if@svg@tempswa%
      \ifx\svgx@extr@format\@empty%
        \def\svgx@extr@format{eps}%
      \else%
        \svgx@ifinlist{\svgx@extr@format}{eps}{}{%
          \edef\svgx@extr@format{\svgx@extr@format,eps}%
        }%
      \fi%
      \svg@deprecated@key[svg-extract]{eps}{extractformat={\svgx@extr@format}}%
    \else%
      \FamilyKeyStateUnknownValue%
    \fi%
  \fi%
}
% TODO boolean key true default and false empty
\newcommand*\svgx@extr@preamble{\jobname}%
\DefineFamilyKey{SVG}{extractpreamble}{%
  \renewcommand*\svgx@extr@preamble{#1}%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{SVG}{preamble}{%
  \svg@deprecated@key[svg-extract]{preamble=#1}{extractpreamble=#1}%
}
\newcommand*\svgx@endpreamble{}
\expandafter\def\expandafter\svgx@endpreamble\expandafter{%
  \csname begin\endcsname{document}%
}
\DefineFamilyKey{SVG}{extractpreambleend}{%
  \renewcommand*\svgx@endpreamble{#1}%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{SVG}{end}{%
  \svg@deprecated@key[svg-extract]{end=#1}{extractpreambleend=#1}%
}
\newcounter{svgx@extr@iterations}
\DefineFamilyKey{SVG}{extractruns}{%
  \FamilySetCounter{SVG}{extractruns}{svgx@extr@iterations}{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifnum\value{svgx@extr@iterations}<\@ne\relax%
      \PackageWarning{svg-extract}{%
        The count for iterations has to be at least one%
      }%
      \FamilySetCounter{SVG}{extractruns}{svgx@extr@iterations}{\@ne}%
    \fi%
  \fi%
}
\DefineFamilyKey{SVG}{extractiterations}{\FamilyOptions{SVG}{extractruns=#1}}
\ifxetex
  \newcommand*\svgx@latex@exe{xelatex}
\else
  \ifluatex
    \newcommand*\svgx@latex@exe{lualatex}
  \else
    \newcommand*\svgx@latex@exe{pdflatex}
  \fi
  \ifpdf\else
    \edef\svgx@latex@exe{\svgx@latex@exe\space--output-format=dvi}
  \fi
\fi
\DefineFamilyKey{SVG}{latexexe}{%
  \renewcommand*\svgx@latex@exe{#1}%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{SVG}{pdflatex}{%
  \svg@deprecated@key[svg-extract]{pdflatex=#1}{latexexe=#1}%
}
\newcommand*\svgx@latex@ext{tex}
\DefineFamilyKey{SVG}{latexext}{%
  \svg@quotes@remove*[{#1}]{\svgx@latex@ext}%
  \svg@remove@leadingchar.\svgx@latex@ext%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@latex@opt{}
\DefineFamilyKey{SVG}{latexopt}{%
  \renewcommand*\svgx@latex@opt{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@dvips@exe{dvips}
\newcommand*\svgx@dvips@opt{}
\DefineFamilyKey{SVG}{dvipsopt}{%
  \renewcommand*\svgx@dvips@opt{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@pstoeps@exe{ps2eps}
\newcommand*\svgx@pstoeps@opt{-B -C}
\DefineFamilyKey{SVG}{pstoepsopt}{%
  \renewcommand*\svgx@pstoeps@opt{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@pstopdf@exe{ps2pdf}
\newcommand*\svgx@pstopdf@opt{}
\DefineFamilyKey{SVG}{pstopdfopt}{%
  \renewcommand*\svgx@pstopdf@opt{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@pdftoeps@exe{pdftops -eps}
\newcommand*\svgx@pdftoeps@opt{}
\DefineFamilyKey{SVG}{pdftoepsopt}{%
  \renewcommand*\svgx@pdftoeps@opt{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@pdftops@exe{pdftops}
\newcommand*\svgx@pdftops@opt{}
\DefineFamilyKey{SVG}{pdftopsopt}{%
  \renewcommand*\svgx@pdftops@opt{#1}%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{SVG}{pdftops}{%
  \PackageWarning{svg-extract}{%
    The option key `pdftops' is deprecated. \MessageBreak%
    You should use either `pdftoepsopt' or\MessageBreak%
    `pdftopsopt' instead. See the manual for\MessageBreak%
    more. Nothing was done%
  }%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@conv@mode{0}
\newcommand*\svgx@conv@cmd{\svgx@magick@cmd}
\DefineFamilyKey{SVG}{convert}[true]{%
  \FamilySetNumerical{SVG}{convert}{svg@tempa}{%
    {false}{0},{off}{0},{no}{0},%
    {true}{1},{on}{1},{yes}{1},{auto}{1},{onlynewer}{1},{newer}{1},%
    {forced}{2},{force}{2},{overwrite}{2},%
    {magick}{3},{imagemagick}{3},{convert}{3},%
    {gs}{4},{ghostscript}{4},%
    {gs64}{5},{ghostscript64}{5},%
    {gs32}{6},{ghostscript32}{6}%
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\svg@tempa\relax% false
      \def\svgx@conv@mode{0}%
    \or% true
      % TODO Warning! check when executed?
      \ifx\svg@IfFileNewer\@undefined%
        \def\svgx@conv@mode{2}%
      \else%
        \def\svgx@conv@mode{1}%
      \fi%
    \or% forced
      \def\svgx@conv@mode{2}%
    \or% magick
      \renewcommand*\svgx@conv@cmd{\svgx@magick@cmd}%
      \ifnum\svgx@conv@mode=\z@\relax%
        \def\svgx@conv@mode{1}%
      \fi%
    \or% gs
      \renewcommand*\svgx@conv@cmd{\svgx@gs@cmd}%
      \ifnum\svgx@conv@mode=\z@\relax%
        \def\svgx@conv@mode{1}%
      \fi%
    \or% gs64
      \renewcommand*\svgx@conv@cmd{\svgx@gs@cmd}%
      \svg@ifwindowsdetected{%
        \renewcommand*\svgx@gs@exe{gswin64c}%
      }{}%
      \ifnum\svgx@conv@mode=\z@\relax%
        \def\svgx@conv@mode{1}%
      \fi%
    \or% gs32
      \renewcommand*\svgx@conv@cmd{\svgx@gs@cmd}%
      \svg@ifwindowsdetected{%
        \renewcommand*\svgx@gs@exe{gswin32c}%
      }{}%
      \ifnum\svgx@conv@mode=\z@\relax%
        \def\svgx@conv@mode{1}%
      \fi%
    \fi%
  \else% legacy option
    \svg@quotes@remove[{#1}]{\svg@tempb}%
    \def\svg@tempa##1-##2\@nil{%
      \IfArgIsEmpty{##2}{\let\svg@tempb\@empty}{%
        \def\svg@tempa####1-\@nil{\def\svg@tempb{-####1}}%
        \svg@tempa##2\@nil%
      }%
      \edef\svg@tempa{\trim@spaces{##1}}%
    }%
    \expandafter\svg@tempa\svg@tempb-\@nil%
    \ifx\svg@tempa\@empty\else%
      \if@svg@quotes@found%
        \edef\svg@tempa{"\svg@tempa"}%
      \fi%
    \fi%
    \@svg@tempswafalse%
    \ifx\svg@tempa\@empty\else\@svg@tempswatrue\fi%
    \ifx\svg@tempb\@empty\else\@svg@tempswatrue\fi%
    \if@svg@tempswa%
      \PackageWarning{svg-extract}{%
        Setting%
        \ifx\svg@tempa\@empty\else%
          \space the executable \ifx\svg@tempb\@empty\else and \fi%
        \fi%
        \ifx\svg@tempb\@empty\else%
          \space associated options%
        \fi%
        \MessageBreak%
        for ImageMagick should be done with%
        \ifx\svg@tempa\@empty\else%
          \MessageBreak%
          `magickexe=\svg@tempa'%
        \fi%
        \ifx\svg@tempb\@empty\else%
          \MessageBreak%
          \ifx\svg@tempa\@empty\else and \fi\space%
          `magicksetting' and/or `magickoperator'%
        \fi%
        \MessageBreak%
        Nevertheless, this was done by now anyway%
        \ifx\svg@tempb\@empty\else%
          , whereby \MessageBreak `magicksetting=\svg@tempb' was used%
        \fi%
      }%
      \FamilyOptions{SVG}{convert=magick}%
      \edef\svg@tempa{%
        \ifx\svg@tempa\@empty\else%
          \noexpand\FamilyOptions{SVG}{magickexe=\svg@tempa}%
        \fi%
        \ifx\svg@tempb\@empty\else%
          \noexpand\FamilyOptions{SVG}{magicksetting=\svg@tempb}%
        \fi%
      }%
      \svg@tempa%
    \fi%
  \fi%
}
\newcommand*\svgx@conv@format{png}
\DefineFamilyKey{SVG}{convertformat}{%
  \svg@lowercase[{#1}]{\svgx@conv@format}%
  \svgx@normalize@list{\svgx@conv@format}%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{SVG}{png}[true]{%
  \FamilySetBool{SVG}{png}{@svg@tempswa}{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \if@svg@tempswa%
      \ifx\svgx@conv@format\@empty%
        \def\svgx@conv@format{png}%
      \else%
        \svgx@ifinlist{\svgx@conv@format}{png}{}{%
          \edef\svgx@conv@format{\svgx@conv@format,png}%
        }%
      \fi%
      \svg@deprecated@key[svg-extract]{png}{convertformat={\svgx@conv@format}}%
    \else%
      \FamilyKeyStateUnknownValue%
    \fi%
  \fi%
}
\newcommand*\svgx@conv@dpi{}
\let\svgx@conv@dpi\relax
\DefineFamilyKey{SVG}{convertdpi}{%
  \FamilyKeyStateUnknownValue%
  \svgx@ifkeyandval{#1}{%
    \svgx@conv@get@dpi{##2}%
    \ifx\svg@tempa\relax\else%
      \expandafter\edef\csname svgx@conv@dpi@##1\endcsname{\svg@tempa}%
      \FamilyKeyStateProcessed%
    \fi%
  }{%
    \svgx@conv@get@dpi{##1}%
    \ifx\svg@tempa\relax\else%
      \edef\svgx@conv@dpi{\svg@tempa}%
      \FamilyKeyStateProcessed%
    \fi%
  }%
}
\DefineFamilyKey{SVG}{convertdensity}{\FamilyOptions{SVG}{convertdpi=#1}}
\newcommand*\svgx@conv@get@dpi[1]{%
  \begingroup%
    \def\svg@tempa##1dpi##2x##3dpi##4\@nil{%
      \edef\svg@tempa{##1}%
      \@svg@tempswafalse%
      \svg@ifnumber{##1}{%
        \IfArgIsEmpty{##3}{\@svg@tempswatrue}{%
          \svg@ifnumber{##3}{\edef\svg@tempa{##1x##3}}{}%
        }%
      }{}%
      \if@svg@tempswa\else%
        \expandafter\svg@tempb\svg@tempa xx\@nil%
      \fi%
    }%
    \def\svg@tempb##1x##2x##3\@nil{%
      \Ifstr{##3}{x}{%
        \@svg@tempswatrue%
        \IfArgIsEmpty{##1}{\@svg@tempswafalse}{%
          \svg@ifnumber{##1}{}{\@svg@tempswafalse}%
        }%
        \IfArgIsEmpty{##2}{\@svg@tempswafalse}{%
          \svg@ifnumber{##2}{}{\@svg@tempswafalse}%
        }%
        \if@svg@tempswa%
          \edef\svg@tempa{##1x##2}%
        \fi%
      }{}%
    }%
    \svg@ifstrblank{#1}{%
      \let\svg@tempa\@empty%
    }{%
      \lowercase{\svg@tempa#1dpi#1xdpi\@nil}%
      \if@svg@tempswa\else%
        \let\svg@tempa\relax%
      \fi%
    }%
    \edef\svg@tempb{%
      \endgroup%
      \ifx\svg@tempa\relax%
        \let\noexpand\svg@tempa\noexpand\relax%
      \else%
        \def\noexpand\svg@tempa{\svg@tempa}%
      \fi%
    }%
  \svg@tempb%
}
\newcommand*\svgx@formatkey@set[2]{%
  \svgx@ifkeyandval{#1}{%
    \svg@ifstrblank{##1}{}{%
      \edef\svg@tempa{\trim@spaces{##1}}%
      \svg@ifvalueisrelax{##2}{%
        \expandafter\let\csname #2@\svg@tempa\endcsname\relax%
      }{%
        \@namedef{#2@\svg@tempa}{##2}%
      }%
      \FamilyKeyStateProcessed%
    }%
  }{%
    \svg@ifvalueisrelax{##1}{%
      \expandafter\let\csname #2\endcsname\relax%
    }{%
      \@namedef{#2}{##1}%
    }%
    \FamilyKeyStateProcessed%
  }%
}
\newcommand*\svgx@formatkey@use[3]{%
  \scr@ifundefinedorrelax{#1@#2}{%
    \scr@ifundefinedorrelax{#1}{}{%
      \expandafter\ifx\csname #1\endcsname\@empty\else%
        #3\@nameuse{#1}\space%
      \fi%
    }%
    \scr@ifundefinedorrelax{#1@#2+}{}{%
      \expandafter\ifx\csname #1@#2+\endcsname\@empty\else%
        #3\@nameuse{#1@#2+}\space%
      \fi%
    }%
  }{%
    \expandafter\ifx\csname #1@#2\endcsname\@empty\else%
      #3\@nameuse{#1@#2}\space%
    \fi%
  }%
}
% TODO \svg@ifvalueisrelax{#1}{%
\svg@ifwindowsdetected{%
  \newcommand*\svgx@magick@exe{magick}%
}{%
  \newcommand*\svgx@magick@exe{convert}%
}
\DefineFamilyKey{SVG}{magickexe}{%
  \renewcommand*\svgx@magick@exe{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@magick@set{}
\DefineFamilyKey{SVG}{magicksetting}{%
  \FamilyKeyStateUnknownValue%
  \svgx@formatkey@set{#1}{svgx@magick@set}%
}
\newcommand*\svgx@magick@opr{}
\DefineFamilyKey{SVG}{magickoperator}{%
  \FamilyKeyStateUnknownValue%
  \svgx@formatkey@set{#1}{svgx@magick@opr}%
}
\newcommand*\svgx@magick@cmd[5]{%
  \svgx@magick@exe\space%
  \svgx@formatkey@use{svgx@conv@dpi}{#5}{-density }%
  \svgx@formatkey@use{svgx@magick@set}{#5}{}%
  "#2#1.#3"\space%
  \svgx@formatkey@use{svgx@magick@opr}{#5}{}%
  "#4#1.#5"%
}
\svg@ifwindowsdetected{%
  \newcommand*\svgx@gs@exe{gswin64c}%
}{%
  \newcommand*\svgx@gs@exe{gs}%
}
\DefineFamilyKey{SVG}{gsexe}{%
  \renewcommand*\svgx@gs@exe{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@gs@opt{}
\DefineFamilyKey{SVG}{gsopt}{%
  \FamilyKeyStateUnknownValue%
  \svgx@formatkey@set{#1}{svgx@gs@opt}%
}
\newcommand*\svgx@gs@device{}
\DefineFamilyKey{SVG}{gsdevice}{%
  \FamilyKeyStateUnknownValue%
  \svgx@formatkey@set{#1}{svgx@gs@device}%
}
\newcommand*\svgx@gs@cmd[5]{%
  \svgx@gs@exe\space-dSAFER -dBATCH -dNOPAUSE\space%
  \svgx@formatkey@use{svgx@gs@device}{#5}{-sDEVICE=}%
  \svgx@formatkey@use{svgx@conv@dpi}{#5}{-r}%
  \svgx@formatkey@use{svgx@gs@opt}{#5}{}%
  -sOutputFile="#4#1.#5"\space"#2#1.#3"%
}
\newcommand*\svgx@out@path{}
\DefineFamilyKey{SVG}{extractpath}{%
  \svg@sanitize@dq\svg@tempb{#1}%
  \FamilySetNumerical{SVG}{extractpath}{svg@tempa}{%
    {svgpath}{0},{svgdir}{0},%
    {svgsubpath}{1},{svgsubdir}{1},%
    {basepath}{2},{basedir}{2},{jobpath}{2},{jobdir}{2},%
    {basesubpath}{3},{basesubdir}{3},{jobsubpath}{3},{jobsubdir}{3},%
    {inkscapepath}{4},{inkscapedir}{4},%
    {inkscapesubpath}{5},{inkscapesubdir}{5}%
  }{\svg@tempb}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\svg@tempa\relax% svgpath
      \renewcommand*\svgx@out@path{\svg@file@path}%
    \or% svgsubpath
      \renewcommand*\svgx@out@path{\svg@file@path svg-extract/}%
    \or% basepath
      \renewcommand*\svgx@out@path{\@currdir}%
    \or% basesubpath
      \renewcommand*\svgx@out@path{\@currdir svg-extract/}%
    \or% inkscapepath
      \renewcommand*\svgx@out@path{\svg@ink@path}%
    \or% inkscapesubpath
      \renewcommand*\svgx@out@path{\svg@ink@path svg-extract/}%
    \fi%
  \else%
    \edef\svgx@out@path{\svg@tempb}%
    \svg@normalize@path{\svgx@out@path}%
    \FamilyKeyStateProcessed%
  \fi%
}
\DefineFamilyKey{SVG}{path}{%
  \svg@deprecated@key[svg-extract]{path=#1}{extractpath=#1}%
}
% TODO revise argument: \svg@ink@name > \svg@file@name?
\newcommand*\svgx@out@name{\the\value{svgx@out@count}-\svg@ink@name}
\svg@newif\if@svgx@out@sec
\newcounter{svgx@out@count}
\newcommand*\svgx@out@sec{unknown}
\DefineFamilyKey{SVG}{extractname}{%
  \svg@ifvalueisrelax{#1}{%
    \svgsetup{extractname=filenamenumbered}%
  }{%
    \svg@sanitize@dq\svg@tempb{#1}%
    \FamilySetNumerical{SVG}{extractname}{svg@tempa}{%
      {filename}{0},{name}{0},%
      {filenamenumbered}{1},{namenumbered}{1},%
      {numberedfilename}{1},{numberedname}{1},%
      {numbered}{2},{section}{2},{numberedsection}{2},{sectionnumbered}{2}%
    }{\svg@tempb}%
    \@svgx@out@secfalse%
    \ifx\FamilyKeyState\FamilyKeyStateProcessed%
      \ifcase\svg@tempa\relax% filename
        \renewcommand*\svgx@out@name{\svg@ink@name-extract}%
      \or% filenamenumbered
        \renewcommand*\svgx@out@name{\the\value{svgx@out@count}-\svg@ink@name}%
      \or% numbered
        \renewcommand*\svgx@out@name{\the\value{svgx@out@count}-\svgx@out@sec}%
        \@svgx@out@sectrue%
      \fi%
    \else%
      \renewcommand*\svgx@out@name{#1}%
      \FamilyKeyStateProcessed%
    \fi%
  }%
}
\DefineFamilyKey{SVG}{name}{%
  \svg@deprecated@key[svg-extract]{name=#1}{extractname=#1}%
}
\newcommand*\svgx@param@width{\svg@param@width}
\DefineFamilyKey{SVG}{extractwidth}{%
  \svg@ifvalueisrelax{#1}{%
    \renewcommand*\svgx@param@width{\z@}%
    \FamilyKeyStateProcessed%
  }{%
    \svgx@ifvalueisinherit{#1}{%
      \renewcommand*\svgx@param@width{\svg@param@width}%
      \FamilyKeyStateProcessed%
    }{%
      \FamilySetUseLengthMacro{SVG}{extractwidth}{\@tempa}{#1}%
      \ifx\FamilyKeyState\FamilyKeyStateProcessed%
        \ifdim\@tempa<\z@\relax%
          \FamilyKeyStateUnknownValue%
        \else%
          \def\svgx@param@width{\dimexpr\glueexpr#1\relax\relax}%
        \fi%
      \fi%
    }%
  }%
}
\newcommand*\svgx@param@height{\svg@param@height}
\DefineFamilyKey{SVG}{extractheight}{%
  \svg@ifvalueisrelax{#1}{%
    \renewcommand*\svgx@param@height{\z@}%
    \FamilyKeyStateProcessed%
  }{%
    \svgx@ifvalueisinherit{#1}{%
      \renewcommand*\svgx@param@height{\svg@param@height}%
      \FamilyKeyStateProcessed%
    }{%
      \FamilySetUseLengthMacro{SVG}{extractheight}{\@tempa}{#1}%
      \ifx\FamilyKeyState\FamilyKeyStateProcessed%
        \ifdim\@tempa<\z@\relax%
          \FamilyKeyStateUnknownValue%
        \else%
          \def\svgx@param@height{\dimexpr\glueexpr#1\relax\relax}%
        \fi%
      \fi%
    }%
  }%
}
\svg@newif\if@svgx@param@distort
\DefineFamilyKey{SVG}{extractdistort}[true]{%
  \svgx@ifvalueisinherit{#1}{%
    \renewcommand*\if@svgx@param@distort{\if@svg@param@distort}%
    \FamilyKeyStateProcessed%
  }{%
    \FamilySetBool{SVG}{extractdistort}{@svgx@param@distort}{#1}%
  }%
}
\DefineFamilyKey{SVG}{extractkeepaspectratio}[true]{%
  \FamilySetBool{SVG}{extractkeepaspectratio}{@svg@tempswa}{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \if@svg@tempswa%
      \FamilyOptions{SVG}{extractdistort=false}%
    \else%
      \FamilyOptions{SVG}{extractdistort=true}%
    \fi%
  \else%
    \FamilyOptions{SVG}{extractdistort=#1}%
  \fi%
}
\newcommand*\svgx@param@scale{\svg@param@scale}
\DefineFamilyKey{SVG}{extractscale}{%
  \FamilyKeyStateUnknownValue%
  \svg@ifvalueisrelax{#1}{%
    \renewcommand*\svgx@param@scale{1}%
    \FamilyKeyStateProcessed%
  }{%
    \svgx@ifvalueisinherit{#1}{%
      \renewcommand*\svgx@param@scale{\svg@param@scale}%
      \FamilyKeyStateProcessed%
    }{%
      \Ifisdimension{#1\p@}{%
        \ifdim\dimexpr#1\p@\relax>\z@\relax%
          \renewcommand*\svgx@param@scale{#1}%
          \FamilyKeyStateProcessed%
        \fi%
      }{}%
    }%
  }%
}
\newcommand*\svgx@param@pretex{\svg@param@pretex}
\DefineFamilyKey{SVG}{extractpretex}{%
  \svg@ifvalueisrelax{#1}{%
    \let\svgx@param@pretex\relax%
  }{%
    \svgx@ifvalueisinherit{#1}{%
      \renewcommand*\svgx@param@pretex{\svg@param@pretex}%
    }{%
      \renewcommand*\svgx@param@pretex{#1}%
    }%
  }%
  \FamilyKeyStateProcessed%
}
\newcommand*\svgx@param@apptex{\svg@param@apptex}
\DefineFamilyKey{SVG}{extractapptex}{%
  \svg@ifvalueisrelax{#1}{%
    \let\svgx@param@apptex\relax%
  }{%
    \svgx@ifvalueisinherit{#1}{%
      \renewcommand*\svgx@param@apptex{\svg@param@apptex}%
    }{%
      \renewcommand*\svgx@param@apptex{#1}%
    }%
  }%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{SVG}{extractpostex}{%
  \svg@deprecated@key[svg-extract]{extractpostex=#1}{extractapptex=#1}%
}
\newcommand*\svgx@clean{}
\DefineFamilyKey{SVG}{clean}[true]{%
  \FamilySetNumerical{SVG}{clean}{svg@tempa}{%
    {false}{0},{off}{0},{no}{0},%
    {true}{1},{on}{1},{yes}{1},{full}{1},{complete}{1},{entire}{1},%
    {nolatex}{2},{notex}{2},{most}{2},{almost}{2},{nearly}{2}%
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\svg@tempa\relax% false
      \renewcommand*\svgx@clean{}%
    \or% true
      \renewcommand*\svgx@clean{log,aux,dvi,out,ps,eps,pdf,\svgx@latex@ext}%
    \or% nolatex
      \renewcommand*\svgx@clean{log,aux,dvi,out,ps,eps,pdf}%
    \fi%
  \else%
    \svg@lowercase[{#1}]{\svgx@clean}%
    \svgx@normalize@list{\svgx@clean}%
    \FamilyKeyStateProcessed%
  \fi%
}
\DefineFamilyKey{SVG}{clear}[true]{\FamilyOptions{SVG}{clean=#1}}
\svg@newif\if@svgx@exclude
\FamilyBoolKey{SVG}{exclude}{@svgx@exclude}
\FamilyExecuteOptions{SVG}{%
  extract=forced,extractpath=basesubdir,%
  extractruns=2,extractname=filenamenumbered,extractdistort=inherit,%
  convert=magick,convert=false,%
  gsdevice={png=png16m},gsdevice={jpeg=jpeg},gsdevice={jpg=jpeg},%
  gsdevice={tif=tiff48nc},gsdevice={tiff=tiff48nc},%
  gsdevice={eps=eps2write},gsdevice={ps=ps2write}%
}
\FamilyProcessOptions{SVG}
\svg@newif\if@svgx@standalone
\newcommand*\svgxsetbox[4][]{%
  \@svgx@standalonetrue%
  \svgx@setbox{#1}{#2}{#3}{#4}%
  \scr@ifundefinedorrelax{AtEndPreamble}{%
    \let\svg@tempa\@firstofone%
  }{%
    \def\svg@tempa{\AtEndPreamble}%
  }%
  \svg@tempa{\AtBeginDocument{\svgx@setbox{#1}{#2}{#3}{#4}}}%
}
\newcommand*\svgx@setbox[4]{%
  \sbox\svg@box{%
    \svg@local@param@set{#1,draft=false}%
    \Gin@draftfalse%
    \svg@ink@include{#2}{#3}{#4}%
  }%
  \svgxsetpapersize%
}
\newcommand*\svgxsetpapersize{%
  \setlength\paperwidth{\the\wd\svg@box}%
  \scr@ifundefinedorrelax{stockwidth}{}{%
    \setlength\stockwidth{\paperwidth}%
  }%
  \scr@ifundefinedorrelax{mediawidth}{}{%
    \setlength\mediawidth{\paperwidth}%
  }%
  \setlength\textwidth{\paperwidth}%
  \setlength\paperheight{\the\dimexpr\ht\svg@box+\dp\svg@box\relax}%
  \scr@ifundefinedorrelax{stockheight}{}{%
    \setlength\stockheight{\paperheight}%
  }%
  \scr@ifundefinedorrelax{mediaheight}{}{%
    \setlength\mediaheight{\paperheight}%
  }%
  \setlength\textheight{\paperheight}%
  \hoffset=-1in%
  \oddsidemargin=\z@%
  \evensidemargin=\z@%
  \voffset=-1in%
  \topmargin=\z@%
  \headheight=\z@%
  \headsep=\z@%
  \topskip=\z@%
  \footskip=\z@%
  \marginparsep=\z@%
  \marginparwidth=\z@%
  \marginparpush=\z@%
}
\@onlypreamble\svgxsetpapersize
\svg@newif\if@svgx@beamer
\@ifclassloaded{beamer}{\@svgx@beamertrue}{}%
\newcommand*\svgxoutputbox{%
  \begingroup%
    \setlength\parindent{\z@}%
    \setlength\parskip{\z@}%
    \setlength\parfillskip{\z@}%
    \if@svgx@beamer%
      \setbeamertemplate{navigation symbols}{}%
      \begin{frame}[plain]%
      \usebox\svg@box%
      \end{frame}%
    \else%
      \usebox\svg@box%
    \fi%
    \endgraf%
  \endgroup%
}
\DefineFamilyMember[.param]{SVG}
\newcommand*\svgx@param@angle{0}
\svg@local@param@def{%
  \DefineFamilyKey[.param]{SVG}{extractangle}{%
    \FamilyKeyStateUnknownValue%
    \svg@ifvalueisrelax{#1}{%
      \renewcommand*\svgx@param@angle{0}%
      \FamilyKeyStateProcessed%
    }{%
      \svgx@ifvalueisinherit{#1}{%
        \renewcommand*\svgx@param@angle{\svg@param@angle}%
        \FamilyKeyStateProcessed%
      }{%
        \Ifisdimension{#1\p@}{%
          \renewcommand*\svgx@param@angle{#1}%
          \FamilyKeyStateProcessed%
        }{}%
      }%
    }%
  }%
}
\let\svghidepreamblestart\relax
\let\svghidepreambleend\relax
\newcommand*\svgx@include@cmd{}
\renewcommand*\includesvgx{%
  \def\svgx@include@cmd{\includesvg}%
  \kernel@ifnextchar[%]
    {\svgx@include}%
    {\svgx@@@include{}{}}%
}
\renewcommand*\includeinkscapex{%
  \def\svgx@include@cmd{\includeinkscape}%
  \kernel@ifnextchar[%]
    {\svgx@include}%
    {\svgx@@@include{}{}}%
}
\DefineFamilyMember[.graphicx]{SVG}
\newcommand*\svgx@graphicx@keys{%
  width,height,scale,keepaspectratio,distort,angle,origin,draft%
}
\newcommand*\svgx@params@exec{}
\newcommand*\svgx@params@relax{}
\newcommand*\svgx@params@pass{}
\newcommand*\svgx@params@unknown{}
\newcommand*\svgx@include{}
\def\svgx@include[#1]{%
  \kernel@ifnextchar[%]
  {\svgx@@include{#1}}%
  {%
    \begingroup%
      \svg@local@param@use%
      \begingroup%
        \svgx@@normalize@list\svgx@params@unknown{#1}%
% DOC \ToDo{revise; \opt{@else@} with \cs{FamilyOptions}}[KOMA v3.27]
        \RelaxFamilyKey[.svg.sty]{SVG}{lastpage}
        \@for\svg@tempb:={.svg.sty,.svg-extract.sty,.param}\do{%
          \let\svgx@params@pass\svgx@params@unknown%
          \let\svgx@params@unknown\@empty%
          \DefineFamilyKey[\svg@tempb]{SVG}{@else@}{%
            \expandafter\svgx@@ifinlist\expandafter{\svgx@params@pass}{####1}%
              {\l@addto@macro\svgx@params@unknown{,####1}}{}%
            \FamilyKeyStateProcessed%
          }%
          \expandafter\FamilyExecuteOptions\expandafter[\svg@tempb]{SVG}{#1}%
        }%
% DOC \svgx@params@unknown enthält jetzt alle unbekannten Optionen
        \svgx@normalize@list{\svgx@params@unknown}%
        \let\svgx@params@exec\@empty%
        \let\svgx@params@relax\@empty%
        \let\svgx@params@pass\@empty%
        \def\svg@tempb####1{%
          \DefineFamilyKey[.graphicx]{SVG}{####1}[]{%
            \svgx@remove@key@list{\svgx@params@relax}{####1}%
            \svgx@remove@key@list{\svgx@params@pass}{####1}%
            \svg@ifvalueisrelax{########1}{%
              \l@addto@macro\svgx@params@relax{,####1=########1}%
            }{%
              \IfArgIsEmpty{########1}{%
                \l@addto@macro\svgx@params@pass{,####1}%
              }{%
                \l@addto@macro\svgx@params@pass{,####1=########1}%
              }%
            }%
            \FamilyKeyStateProcessed%
          }%
        }%
        \@for\svg@tempa:=\svgx@graphicx@keys\do{%
          \expandafter\svg@tempb\expandafter{\svg@tempa}%
        }%
        \DefineFamilyKey[.graphicx]{SVG}{distort}[true]{%
          \FamilySetBool{SVG}{distort}{@svg@tempswa}{####1}%
          \ifx\FamilyKeyState\FamilyKeyStateProcessed%
            \if@svg@tempswa%
              \FamilyExecuteOptions[.graphicx]{SVG}{keepaspectratio=false}%
            \else
              \FamilyExecuteOptions[.graphicx]{SVG}{keepaspectratio=true}%
            \fi%
          \fi%
        }%
% DOC preserve right order
        \DefineFamilyKey[.graphicx]{SVG}{@else@}{%
          \expandafter\svgx@@ifinlist\expandafter{\svgx@params@unknown}{####1}%
            {\l@addto@macro\svgx@params@pass{,####1}}%
            {\l@addto@macro\svgx@params@exec{,####1}}%
          \FamilyKeyStateProcessed%
        }%
        \FamilyExecuteOptions[.graphicx]{SVG}{#1}%
        \svgx@normalize@list{\svgx@params@exec}%
        \svgx@normalize@list{\svgx@params@relax}%
        \svgx@normalize@list{\svgx@params@pass}%
        \edef\svg@tempa{%
          \endgroup%
          \def\noexpand\svgx@params@exec%
            {\etex@unexpanded\expandafter{\svgx@params@exec}}%
          \def\noexpand\svgx@params@relax%
            {\etex@unexpanded\expandafter{\svgx@params@relax}}%
          \def\noexpand\svgx@params@pass%
            {\etex@unexpanded\expandafter{\svgx@params@pass}}%
        }%
      \svg@tempa%
      \expandafter\svg@local@param@set\expandafter{\svgx@params@relax}%
      \def\svg@tempb{%
        draft\if@svg@draft\else=false\fi,%
      }%
      \ifdim\svg@param@width>\z@\relax%
        \l@addto@macro\svg@tempb{width=\svg@param@width,}%
      \fi%
      \ifdim\svg@param@height>\z@\relax%
        \l@addto@macro\svg@tempb{height=\svg@param@height,}%
      \fi%
      \ifdim\dimexpr\svg@param@scale\p@\relax=\p@\relax\else%
        \l@addto@macro\svg@tempb{scale=\svg@param@scale,}%
      \fi%
      \l@addto@macro\svg@tempb{keepaspectratio\if@svg@param@distort=false\fi,}%
      \edef\svgx@params@pass{%
        \svg@tempb\etex@unexpanded\expandafter{\svgx@params@pass}%
      }%
      \edef\svg@tempa{%
        \endgroup%
        \noexpand\svgx@@@include%
          {\etex@unexpanded\expandafter{\svgx@params@exec}}%
          {\etex@unexpanded\expandafter{\svgx@params@pass}}%
      }%
    \svg@tempa%
  }%
}
\newcommand*\svgx@@include{}
\def\svgx@@include#1[#2]{%
  \svgx@@@include{#1}{#2}%
}
\newcommand*\svgx@@@include[3]{%
  \par\bigskip\noindent%
  includesvg:\detokenize{#1}\newline%
  includegraphics:\detokenize{#2}\newline%
  filename:\detokenize{#3}\newline%
  %
  \begingroup%
    \def\svg@tempb##1{%
      \DefineFamilyKey[.graphicx]{SVG}{##1}[]{%
        \def\svg@tempa{####1}%
        \ifx\svg@tempa\@empty\else%
          \def\svg@tempa{=####1}%
        \fi%
        \svg@ifvalueisrelax{####1}{%
          \def\svg@tempb{%
            has no effect as predefined parameters are not\MessageBreak%
            evaluated when command `\expandafter\string\svgx@include@cmd x' is%
            \MessageBreak%
            used with two optional arguments%
          }%
        }{%
          \def\svg@tempb{%
            is ignored and should be used in the second\MessageBreak%
            optional argument in order to pass it\MessageBreak% 
            to `\string\includegraphics[...]'%
          }%
        }%
        \PackageWarning{svg-extract}{%
          The given parameter
          `##1\svg@tempa'\MessageBreak%
          \svg@tempb%
        }%
        \FamilyKeyStateProcessed%
      }%
    }%
    \@for\svg@tempa:=\svgx@graphicx@keys\do{%
      \expandafter\svg@tempb\expandafter{\svg@tempa}%
    }%
    \DefineFamilyKey[.graphicx]{SVG}{distort}[true]{%
      \FamilySetBool{SVG}{distort}{@svg@tempswa}{##1}%
      \ifx\FamilyKeyState\FamilyKeyStateProcessed%
        \PackageWarning{svg-extract}{%
          The given parameter `distort=##1' is ignored \MessageBreak%
          and should be used as 
          `keepaspectratio\if@svg@tempswa=false\fi' in\MessageBreak%
          the second optional argument in order to pass it\MessageBreak%
          to `\string\includegraphics[...]'%
        }%
      \fi
    }%
    \DefineFamilyKey[.graphicx]{SVG}{pretex}{%
      \PackageWarning{svg-extract}{%
        The given parameter `pretex=\detokenize{##1}'\MessageBreak%
        has no effect on extracted/converted grahics.\MessageBreak%
        Instead, you should use\MessageBreak
        `extractpretex=\detokenize{##1}'\MessageBreak%
      }%
      \FamilyKeyStateProcessed%
    }%
    \DefineFamilyKey[.graphicx]{SVG}{apptex}{%
      \PackageWarning{svg-extract}{%
        The given parameter `apptex=\detokenize{##1}'\MessageBreak%
        has no effect on extracted/converted grahics.\MessageBreak%
        Instead, you should use\MessageBreak
        `extractapptex=\detokenize{##1}'\MessageBreak%
      }%
      \FamilyKeyStateProcessed%
    }%
%    \svg@local@param@set{#1}%
%  \endgroup%
% TODO inputformat from \svgx@ext@get@input@format if not set
% TODO inputformat/inputtype/includeformat/includetype (something like this)
    % (\svgx@extr@format,\svgx@conv@format) 
  % TODO set extract=true/force only, if \svgx@out@base does not exist?
    \svgx@include@cmd[{#1,exclude,extract=force}]{#3}%
    \ifx\svgx@out@base\@empty\else%
        % TODO \IfFileExists auf "name".ext überprüfen > svg@IfFileExists?
        % TODO  ggf. mit ./ verwenden?!
      \IfFileExists{\svgx@out@base.pdf}{%
        \begingroup%
          \DefineFamilyKey[.svg.sty]{SVG}{@else@}{\FamilyKeyStateProcessed}%
          \FamilyExecuteOptions[.svg.sty]{SVG}{#2}%
          \svg@param@size@check%
        \endgroup%
        \includegraphics[{#2}]{\svgx@out@base.pdf}%
      }{%
        % TODO Warning with hint to run with --shell-escape
        % TODO use result of inkscape export in draft mode?!
      }%
    \fi%
  \endgroup
}
\svg@newif\if@svgx@run
%\newcommand*\svgx@out@base{}
\renewcommand*\svg@process[3]{%
  \if@svgx@exclude\else%
    \svg@ink@include{#1}{#2}{#3}%
  \fi%
  \if@svgx@out@sec%
    \svgx@get@out@sec%
  \fi%
  \stepcounter{svgx@out@count}%
  \svg@normalize@name{svg-extract}{extract}{svgx@out}%
  % TODO move into \svgx@run, maybe rename to svgx@process
  \ifx\svgx@out@name\@empty%
    % TODO set \@svgx@runfalse?
  \else%
    % TODO check quotes (svgx@ifexpired)
    \edef\svg@ink@file{#1#2.#3}%
%    \svg@quotes@remove[\svgx@out@path\svgx@out@name]{\svgx@out@base}%
    % TODO URGENT handle format comnination
    \ifcase\svgx@extr@mode\relax% false
      \@svgx@runfalse%
    \or% true
      \svgx@ifexpired[\svgx@extr@format]{\svgx@out@path\svgx@out@name}%
        {\svg@ink@file}{\@svgx@runtrue}{\@svgx@runfalse}%
    \or% forced
      \@svgx@runtrue%
    \fi%
    \ifcase\svgx@extr@mode\relax\else%
      \svgx@param@size@check%
      \if@svgx@run\else%
        \ifcase\svgx@conv@mode\relax\or% true
          \svgx@ifexpired[\svgx@conv@format]{\svgx@out@path\svgx@out@name}%
            {\svg@ink@file}{\@svgx@runtrue}{\@svgx@runfalse}%
        \or% forced
          \@svgx@runtrue%
        \fi%
      \fi%
    \fi%
    % TODO URGENT handle format comnination, move before check for \if@svgx@run
    \Ifstr{\svgx@extr@format\svgx@conv@format}{}{%
      \PackageWarning{svg-extract}{%
        Both keys `extractformat' and `convertformat' are\MessageBreak%
        empty, so nothing to do so far%
      }%
      \@svgx@runfalse%
    }{}%
    \if@svgx@run%
      \svgx@run{#1}{#2}{#3}%
    \else%
      % TODO Warnung für fehlende Dateien, wenn nicht --shell-escape
      \ifnum\svgx@conv@mode>\z@\relax%
        \PackageWarning{svg-extract}{%
          The conversion could not be done for image\MessageBreak%
          `\svg@ink@file'\MessageBreak%
          as `extract=false' was set%
        }%
      \fi%
      \if@svgx@exclude%
        % TODO what if \svg@iffilenewer undefined?!
        % TODO wozu ist dieser abermalige Test notwendig?
        \svgx@ifexpired{\svgx@out@path\svgx@out@name}%
          {\svg@ink@file}{\@svg@tempswatrue}{\@svg@tempswafalse}%
        \if@svg@tempswa%
          \PackageWarning{svg-extract}{%
            Neither extraction/conversion nor including of image\MessageBreak%
            `\svg@ink@file'\MessageBreak%
            was done%
          }%
        \fi%
      \fi%
    \fi%
    % TODO check files in svgx@out@path
    \@for\svg@tempa:=\svgx@clean\do{%
      \svgx@ifinlist{\svgx@extr@format,\svgx@conv@format}{\svg@tempa}{}{%
        \svgx@afterdocument@xaddto{%
          \noexpand\svg@shell@rm{\svgx@out@name.\svg@tempa}%
        }%
      }%
    }%
    \svgx@afterdocument@append%
  \fi%
}
\newcommand*\svgx@get@out@sec{%
  \begingroup%
    \let\svg@tempa\@empty%
    \@for\svg@tempb:={%
      part,chapter,section,subsection,subsubsection,paragraph,subparagraph%
    }\do{%
      \scr@ifundefinedorrelax{the\svg@tempb}{}{%
        \ifnum\value{\svg@tempb}>\z@\relax%
          \edef\svg@tempa{\svg@tempb}%
        \fi%
      }%
    }%
    \edef\svg@tempb{%
      \endgroup%
      \ifx\svg@tempa\@empty\else%
        \def\noexpand\svgx@out@sec{\csname the\svg@tempa\endcsname}%
      \fi%
    }%
  \svg@tempb%
}
\newcommand*\svgx@param@size@check{%
  \begingroup%
    \ifdim\dimexpr\svgx@param@scale\p@\relax=\p@\relax\else%
      \let\svg@tempb\@empty%
      \@for\svg@tempa:={scale,width,height}\do{%
        \begingroup%
          \edef\svg@tempb{%
            \expandafter\noexpand\csname svg@param@\svg@tempa\endcsname%
          }%
          \expandafter\ifx\csname svgx@param@\svg@tempa\endcsname\svg@tempb%
            \aftergroup\@svg@tempswatrue%
          \else%
            \aftergroup\@svg@tempswafalse%
          \fi%
        \endgroup%
        \edef\svg@tempb{%
          \unexpanded\expandafter{\svg@tempb}%
          \if@svg@tempswa%
            {[inherited]\svg@tempa}%
          \else%
            {extract\svg@tempa}%
          \fi%
          {\csname svgx@param@\svg@tempa\endcsname}%
        }%
      }%
      \expandafter\svg@param@size@wrn\svg@tempb%
    \fi%
  \endgroup%
}
% TODO check concerning quotes
\newcommand*\svgx@ifexpired[3][%
% TODO URGENT handle format comnination
  \svgx@extr@format\ifnum\svgx@conv@mode>\z@,\svgx@conv@format\fi%
]{%
  \begingroup%
    \@svg@tempswafalse%
    \edef\svg@tempa{%
      \noexpand\svgx@@normalize@list\noexpand\svg@tempa{#1}%
    }%
    \svg@tempa%
    \@for\svg@tempb:=\svg@tempa\do{%
      \svg@IfFileNewer{#2.\svg@tempb}{#3}{}{\@svg@tempswatrue}%
    }%
    \if@svg@tempswa%
      \aftergroup\@firstoftwo%
    \else%
      \aftergroup\@secondoftwo%
    \fi%
  \endgroup%
}
\ifnum\pdf@shellescape=\@ne\relax\else
  \newcommand*\svgx@run[3]{%
    \PackageWarning{svg-extract}{%
      You didn't pass `--shell-escape' flag so it was\MessageBreak%
      not possible to run extraction/conversion for\MessageBreak%
      `#1#2.#3'\MessageBreak%
    }%
  }%
  \expandafter\endinput%
\fi
\newcommand*\svgx@run[3]{%
  % TODO kann der Teil direkt in svg@process?!
  \svg@shell@mkdir{\svgx@out@path}%
  \svgx@generate@texaux{#1}{#2}{#3}%
  \svgx@extr@run{#1#2.#3}%
  \ifnum\svgx@conv@mode>\z@\relax%
    \svgx@conv@run%
  \fi%
  \svgx@afterdocument@xaddto{%
    \noexpand\PackageInfoNoLine{svg-extract}{Done for `#1#2.#3'}%
  }%
}
\svg@newread\svgx@stream@in
\newcommand*\svgx@read@line{}
\svg@newwrite\svgx@stream@out
\svg@newif\if@svgx@write@preamble
\newcommand*\svgx@generate@texaux[3]{%
  \begingroup%
    \svg@quotes@remove*[\svgx@extr@preamble]{\svg@tempa}%
    \ifx\svg@tempa\@empty%
      \@svg@file@foundfalse%
    \else%
      \let\svg@tempb\@empty%
      \@tfor\svg@tempa:={}{\svgx@latex@ext}{tex}\do{%
        \svg@get@file*[\svg@ink@path]{\svgx@extr@preamble}{\svg@tempa}%
        \if@svg@file@found%
          \@break@tfor%
        \fi%
        \svg@quotes@remove{\svg@file@base}%
        \svgx@ifinlist{\svg@tempb}{\svg@file@base}{}{%
          \edef\svg@tempb{\svg@tempb,\svg@file@base}%
        }%
      }%
      \if@svg@file@found%
        \Ifstr{\svg@file@base}{\@currdir\jobname}{%
          \edef\svg@file@base{\svg@file@base.tex}%
        }{}%
      \else%
        \svg@remove@leadingchar,\svg@tempb%
        \let\svg@tempa\@empty%
        \@for\svg@tempb:=\svg@tempb\do{%
          \edef\svg@tempa{%
            \unexpanded\expandafter{\svg@tempa}%
            \noexpand\MessageBreak`\svg@tempb'%
          }%
        }%
        \PackageWarning{svg-extract}{%
          The preamble file(s)\svg@tempa\MessageBreak could not be found%
        }%
      \fi%
    \fi%
    \edef\svg@tempa{%
      \endgroup%
      \if@svg@file@found%
        \def\noexpand\svgx@extr@preamble{\svg@file@base}%
      \else%
        \let\noexpand\svgx@extr@preamble\noexpand\@empty%
      \fi%
    }%
  \svg@tempa%
  \begingroup%
    \endlinechar=\m@ne%
    \svg@quotes@remove{\svgx@extr@preamble}%
    \svg@quotes@remove[\svgx@out@name.\svgx@latex@ext]{\svgx@out@name}%
    \ifx\svgx@extr@preamble\@empty%
      \PackageInfo{svg-extract}{%
        No specific preamble is used for the generation of\MessageBreak%
        the auxiliary file `\svgx@out@name'%
        \if@svg@ink@latex%
          \MessageBreak so the result of extraction/conversion will probably%
          \MessageBreak look different from the appearance in this file%
        \fi%
      }%
    \else%
      \PackageInfo{svg-extract}{%
        The preamble of file `\svgx@extr@preamble'\MessageBreak%
        is used for the generation of the auxiliary file\MessageBreak%
        `\svgx@out@name'%
      }%
      \catcode`\#=12\relax%
      \immediate\openout\svgx@stream@out="\svgx@out@name"%
      \immediate\openin\svgx@stream@in="\svgx@extr@preamble"%
      \@svg@tempswatrue%
      \@svgx@write@preambletrue%
      \let\svgx@read@line\@empty%
      \@whilesw\if@svg@tempswa\fi{%
        \immediate\read\svgx@stream@in to\svgx@read@line%
        \ifx\svgx@read@line\@empty%
          \ifeof\svgx@stream@in\@svg@tempswafalse\fi%
        \else%
          \svgx@read@preamble@till{\svghidepreamblestart}{}%
          \svgx@read@preamble@from{\svghidepreambleend}{}%
          \svgx@read@preamble@till{\svgx@endpreamble}{\@svg@tempswafalse}%
          \if@svgx@write@preamble%
            \if@svgx@classfound\else%
              \expandafter\svgx@documentclass%
                \svgx@read@line\documentclass\documentclass\@nil%
            \fi%
            \ifx\svgx@read@line\@empty\else%
              \immediate\write\svgx@stream@out{%
                \unexpanded\expandafter{\svgx@read@line}%
              }%
            \fi%
          \fi%
        \fi%
      }%
      \immediate\closein\svgx@stream@in%
      \immediate\closeout\svgx@stream@out%
      \catcode`\#=6\relax%
    \fi%
    \let\svg@tempa\@empty%
    \ifx\svgx@extr@preamble\@empty\else%
      \immediate\openin\svgx@stream@in="\svgx@out@name"%
      \loop\unless\ifeof\svgx@stream@in%
        \readline\svgx@stream@in to\svgx@read@line%
        \ifx\svgx@read@line\@empty\else%
          \edef\svg@tempa{%
            \unexpanded\expandafter{\svg@tempa}%
            \unexpanded\expandafter{\svgx@read@line}^^J%
          }%
        \fi%
      \repeat%
      \immediate\closein\svgx@stream@in%
    \fi%
    \immediate\openout\svgx@stream@out="\svgx@out@name"%
    \def\svg@tempb{\@percentchar\@percentchar\space}%
    \immediate\write\svgx@stream@out{%
      \svg@tempb This file `\svgx@out@name' was generated^^J%
      \svg@tempb by package `svg-extract' from source `\jobname'^^J%
      \svg@tempb It's intended to be compiled with\space%
      `\svgx@latex@exe\ifx\svgx@latex@opt\@empty\else\space\svgx@latex@opt\fi'%
    }%
    \svg@ifdvimode{\@svg@tempswatrue}{\@svg@tempswafalse}%
    \immediate\write\svgx@stream@out{%
      \string\AtBeginDocument{\@percentchar^^J%
        \space\space\string\svgxsetpapersize\@percentchar^^J%
        \if@svg@tempswa%
          \space\space\string\AtBeginDvi{\string\special{%
              papersize=\string\the\string\paperwidth,%
                \string\the\string\paperheight%
          }}\@percentchar^^J%
        \fi%
      }^^J%
      \string\PassOptionsToPackage{hidelinks}{hyperref}%
    }%
    \if@svgx@classfound\else%
      \immediate\write\svgx@stream@out{\string\documentclass{article}}%
    \fi%
    \ifx\svg@tempa\@empty\else%
      \immediate\write\svgx@stream@out{%
        \unexpanded\expandafter{\svg@tempa}%
      }%
    \fi%
    \immediate\write\svgx@stream@out{\string\usepackage{svg-extract}}%
    \if@svg@ink@latex%
      \IfFileExists{xr.sty}{%
        \immediate\write\svgx@stream@out{%
          \string\usepackage{xr}^^J%
          \string\externaldocument{\jobname}^^J%
        }%
      }{}%
    \fi%
    \def\svg@tempa##1{%
      \immediate\write\svgx@stream@out{\string\svgsetup{##1}}%
    }%
    \if@svg@ink@latex\else%
      \svg@tempa{inkscapelatex=false}%
    \fi%
    \ifdim\svgx@param@width>\z@\relax%
      \svg@tempa{width=\svgx@param@width}%
    \fi%
    \ifdim\svgx@param@height>\z@\relax%
      \svg@tempa{height=\svgx@param@height}%
    \fi%
    \if@svgx@param@distort%
      \svg@tempa{distort=true}%
    \fi%
    \ifdim\dimexpr\svgx@param@scale\p@\relax=\p@\relax\else%
      \svg@tempa{scale=\svgx@param@scale}%
    \fi%
    \def\svg@tempb{\svg@param@pretex}%
    \ifx\svgx@param@pretex\svg@tempb%
      \let\svgx@param@pretex\svg@param@pretex%
    \fi%
    \ifx\svgx@param@pretex\relax\else%
      \svg@tempa{pretex=\unexpanded\expandafter{\svgx@param@pretex}}%
    \fi%
    \def\svg@tempb{\svg@param@apptex}%
    \ifx\svgx@param@apptex\svg@tempb%
      \let\svgx@param@apptex\svg@param@apptex%
    \fi%
    \ifx\svgx@param@apptex\relax\else%
      \svg@tempa{apptex=\unexpanded\expandafter{\svgx@param@apptex}}%
    \fi%
    \let\svg@tempa\@empty%
    \Ifstr{#3}{pdf}{%
      \if@svg@ink@latex%
        \ifnum\value{svg@param@lastpage}>\z@\relax%
          \edef\svg@tempa{lastpage=\the\value{svg@param@lastpage}}%
        \else%
          \ifnum\value{svg@param@lastpage}=\z@\relax%
            \def\svg@tempa{lastpage=true}%
          \else%
            \def\svg@tempa{lastpage=false}%
          \fi%
        \fi%
      \fi%
    }{}%
    \ifdim\dimexpr\svgx@param@angle\p@\relax=\z@\relax\else%
      \edef\svg@tempa{%
        angle=\svgx@param@angle\ifx\svg@tempa\@empty\else,\svg@tempa\fi%
      }%
    \fi%
    \edef\svg@tempa{%
      \noexpand\string\noexpand\svgxsetbox%
      \ifx\svg@tempa\@empty\else[\svg@tempa]\fi%
      {#1}{#2}{#3}%
    }%
    \immediate\write\svgx@stream@out{\svg@tempa}%
    \immediate\write\svgx@stream@out{%
      \string\begin{document}^^J%
      \string\pagestyle{empty}^^J%
      \string\svgxoutputbox\@percentchar^^J%
      \string\end{document}%
    }%
    \immediate\closeout\svgx@stream@out%
  \endgroup%
}
\svg@newif\if@svgx@classfound
\newcommand*\svgx@documentclass{}
\def\svgx@documentclass#1\documentclass#2\documentclass#3\@nil{%
  \IfArgIsEmpty{#2}{}{\@svgx@classfoundtrue}%
}
\newcommand*\svgx@read@preamble@till[2]{%
  \svgx@read@preamble@omit#1\@nil{till}{#2}%
}
\newcommand*\svgx@read@preamble@from[2]{%
  \svgx@read@preamble@omit#1\@nil{from}{#2}%
}
\newcommand*\svgx@read@preamble@omit{}
\def\svgx@read@preamble@omit#1\@nil#2#3{%
  \def\svg@tempa##1{%
    \def\svg@tempa####1##1####2##1####3\@nil{%
      \IfArgIsEmpty{####3}{}{%
        \Ifstr{#2}{till}{%
          \IfArgIsEmpty{####1}{}{%
            \immediate\write\svgx@stream@out{####1}%
          }%
          \@svgx@write@preamblefalse%
        }{%
          \Ifstr{#2}{from}{%
            \IfArgIsEmpty{####2}{%
              \let\svgx@read@line\@empty%
            }{%
              \def\svgx@read@line{####2}%
            }%
            \@svgx@write@preambletrue%
          }{}%
        }%
        #3%
      }%
    }%
  }%
  \edef\svg@tempb{\expandafter\detokenize\expandafter{#1}}%
  \expandafter\svg@tempa\expandafter{\svg@tempb}%
  \edef\svg@tempb{%
    \expandafter\detokenize\expandafter{\svgx@read@line}\svg@tempb\svg@tempb%
  }%
  \expandafter\svg@tempa\svg@tempb\@nil%
}
\newcommand*\svgx@extr@run[1]{%
  \begingroup%
    \svg@quotes@remove{\svgx@out@name}%
    \svgx@afterdocument@xaddto{%
      \noexpand\PackageInfoNoLine{svg-extract}{Extracting `#1'}%
      \noexpand\PackageInfoNoLine{svg-extract}{%
        Executing LaTeX (\svgx@latex@exe) on\MessageBreak%
        `\svgx@out@name.\svgx@latex@ext'%
        \ifx\svgx@latex@opt\@empty\else%
          \MessageBreak with added options `\svgx@latex@opt'%
        \fi%
      }%
    }%
    \@tempcnta=\value{svgx@extr@iterations}%
    \loop\ifnum\@tempcnta>\z@\relax%
      \svgx@afterdocument@xaddto{%
        \noexpand\ShellEscape{%
          \svgx@latex@exe\space%
          \ifx\svgx@latex@opt\@empty\else\svgx@latex@opt\space\fi%
          "\svgx@out@name.\svgx@latex@ext"%
        }%
      }%
      \advance\@tempcnta\m@ne%
    \repeat%
    \def\svg@tempa##1##2{%
      \svgx@afterdocument@xaddto{%
        \noexpand\PackageInfoNoLine{svg-extract}{%
          Executing ##1 on\MessageBreak%
          `\svgx@out@name.##2'%
        }%
        \noexpand\ShellEscape{%
          \@nameuse{svgx@##1@exe}\space\@nameuse{svgx@##1@opt}\space%
          "\svgx@out@name.##2"%
        }%
      }%
    }%
    \svg@ifdvimode{%
      \svg@tempa{dvips}{dvi}%
      \svgx@ifinlist{\svgx@extr@format}{eps}{\svg@tempa{pstoeps}{ps}}{}%
      \svgx@ifinlist{\svgx@extr@format}{pdf}{\svg@tempa{pstopdf}{ps}}{}%
    }{%
      \svgx@ifinlist{\svgx@extr@format}{eps}{\svg@tempa{pdftoeps}{pdf}}{}%
      \svgx@ifinlist{\svgx@extr@format}{ps}{\svg@tempa{pdftops}{pdf}}{}%
    }%
    \@for\svg@tempa:=\svgx@extr@format\do{%
      \edef\svg@tempb{\svgx@out@name.\svg@tempa}%
      \svgx@afterdocument@xaddto{%
        \noexpand\IfFileExists{"\@currdir\svg@tempb"}{%
          \noexpand\svg@shell@mv{\@currdir\svg@tempb}{\svgx@out@path\svg@tempb}%
        }{%
          \noexpand\svg@troubleshooting{svg-extract}%
            {Extracting}{#1}{\svg@tempb}%
        }%
      }%
    }%
  \endgroup%
}
\svg@ifdvimode{
  \newcommand*\svgx@conv@input@format{ps}
}{
  \newcommand*\svgx@conv@input@format{pdf}
}
\newcommand*\svgx@conv@get@input@format{%
  \ifx\svgx@extr@format\@empty\else%
    \begingroup%
      \def\svg@tempa##1,##2\@nil{%
        \endgroup%
        \def\svgx@conv@input@format{##1}%
      }%
    \expandafter\svg@tempa\svgx@extr@format,\@nil%
  \fi%
}
\newcommand*\svgx@conv@run{%
  \begingroup%
    \svgx@conv@get@input@format%
    \svg@quotes@remove{\svgx@out@path}%
    \svg@quotes@remove{\svgx@out@name}%
    \ifx\svgx@conv@dpi\relax%
      \ifx\svgx@conv@dpi@png\@undefined%
        \def\svgx@conv@dpi@png{300}%
      \fi%
    \fi%
    \@for\svg@tempa:=\svgx@conv@format\do{%
      % TODO URGENT remove \svgx@conv@input@format from \svgx@conv@format
      % TODO URGENT move out of macro
      \svgx@ifinlist{\svgx@extr@format}{\svg@tempa}{%
        \svgx@afterdocument@xaddto{%
          \noexpand\PackageInfoNoLine{svg-extract}{%
            Generating file `\svgx@out@name.\svg@tempa'\MessageBreak%
            was specified with `extractformat' (\svgx@extr@format)\MessageBreak%
            as well as with `convertformat' (\svgx@conv@format)\MessageBreak%
            so the conversion won't be done%
          }%
        }%
      }{%
        \svgx@afterdocument@xaddto{%
          \def\noexpand\svg@tempa{\@currdir}%
          \def\noexpand\svg@tempb{%
            \noexpand\svg@tempa\svgx@out@name.\svgx@conv@input@format%
          }%
          \noexpand\IfFileExists{"\noexpand\svg@tempb"}{}{%
            \def\noexpand\svg@tempa{\svgx@out@path}%
          }%
          \noexpand\PackageInfoNoLine{svg-extract}{%
            Converting (\svg@tempa) `\noexpand\svg@tempb'%
          }%
          % TODO check which command is executed
          \noexpand\ShellEscape{%
            \svgx@conv@cmd{\svgx@out@name}{\noexpand\svg@tempa}%
              {\svgx@conv@input@format}{\svgx@out@path}{\svg@tempa}%
          }%
          \noexpand\IfFileExists{"\svgx@out@path\svgx@out@name.\svg@tempa"}{}{%
            \noexpand\svg@troubleshooting{svg-extract}{Converting (\svg@tempa)}%
              {\noexpand\svg@tempb}{\svgx@out@path\svgx@out@name.\svg@tempa}%
          }%
        }%
      }%
    }%
  \endgroup%
}
\endinput
%%
%% End of file `svg-extract.sty'.

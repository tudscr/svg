%%
%% This is file `svg.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% svg.dtx  (with options: `package,identify,main')
%% svg.dtx  (with options: `package,base,main')
%% svg.dtx  (with options: `package,option,main')
%% svg.dtx  (with options: `package,body,main')
%% 
%% svg -- Include SVG pictures in LaTeX documents using Inkscape
%% 
%% ----------------------------------------------------------------------------
%%
%% Copyright (C) Philip Ilten <philten@cern.ch>, 2012-2016
%% Copyright (C) Falk Hanisch <hanisch.latex@outlook.com>, 2017-2021
%%
%% ----------------------------------------------------------------------------
%%
%% This work may be distributed and/or modified under the conditions
%% of the LaTeX Project Public License, version 1.3c of the license.
%% The latest version of this license is in
%%     http://www.latex-project.org/lppl.txt
%% and version 1.3c or later is part of all distributions of
%% LaTeX 2005/12/01 or later and of this work.
%%
%% This work has the LPPL maintenance status "author-maintained".
%%
%% The current maintainer and author of this work is Falk Hanisch.
%%
%% This work consists of README.md, LICENSE.md, the main source file svg.dtx
%% and the derived documentation svg.pdf as well as the example files
%% svg-example.svg, svg-preamble.tex and root.C (with derived file root.svg).
%%
%% ----------------------------------------------------------------------------
%%
\NeedsTeXFormat{LaTeX2e}[2020-02-02]
\begingroup
  \catcode`\@11\relax%
  \def\svg@Provides#1#2[#3]{%
    \def\@tempa{\def\svg@version{#3}}%
    \ifx\svg@version\@undefined\else%
      \def\@tempb{#3}%
      \ifx\svg@version\@tempb\else%
        \def\@tempa{%
          \@latex@warning@no@line{%
            The version of package `#1' is `#3',\MessageBreak%
            but `\svg@version' was expected!\MessageBreak%
            You should update the svg bundle%
          }%
        }%
      \fi%
    \fi%
    \edef\@tempb{%
      \endgroup%
      \noexpand\ProvidesPackage%
      {#1}[#3\space(#2)]%
      \unexpanded\expandafter{\@tempa}%
    }%
  }%
  \svg@Provides%
  {svg}{include SVG pictures}%
  [2020/06/23 v2.03]%
\@tempb
\RequirePackage{iftex}[2020/03/06]
\RequirePackage{scrbase}[2020/04/19]
\RequirePackage{pdftexcmds}[2019/11/24]
\RequirePackage{trimspaces}[2009/09/17]
\RequirePackage{graphicx}[2019/11/30]
\RequirePackage{shellesc}[2019/11/08]
\ifnum\pdf@shellescape=\@ne\relax
  \RequirePackage{ifplatform}[2017/10/13]
\fi
\newcommand*\svg@catcodes@restore{}
\newcommand*\svg@catcodes@set{%
  \ifx\svg@catcodes@restore\@empty%
    \svg@catcodes@@set\"%
    \svg@catcodes@@set\_%
    \l@addto@macro\svg@catcodes@restore{\let\svg@catcodes@restore\@empty}%
  \fi%
}
\newcommand*\svg@catcodes@@set[1]{%
  \edef\svg@catcodes@restore{%
    \unexpanded\expandafter{\svg@catcodes@restore}%
    \catcode`\noexpand#1\the\catcode`#1\relax%
  }%
  \@makeother#1%
}
\svg@catcodes@set
\AtEndOfPackage{\svg@catcodes@restore}
\newcommand*\svg@newif[1]{\@ifdefinable{#1}{\newif#1}}
\newcommand*\svg@newdimen[1]{\@ifdefinable#1{\newdimen#1}}
\newcommand*\svg@newcount[1]{\@ifdefinable#1{\newcount#1}}
\newcommand*\svg@newtoks[1]{\@ifdefinable#1{\newtoks#1}}
\newcommand*\svg@newread[1]{\@ifdefinable#1{\newread#1}}
\newcommand*\svg@newwrite[1]{\@ifdefinable#1{\newwrite#1}}
\newcommand*\svg@tempa{}
\newcommand*\svg@tempb{}
\svg@newif\if@svg@tempswa
\newcommand*\svg@ifwindowsdetected{\@secondoftwo}
\AfterPackage*{ifplatform}{%
  \renewcommand*\svg@ifwindowsdetected{%
    \ifwindows%
      \expandafter\@firstoftwo%
    \else%
      \expandafter\@secondoftwo%
    \fi%
  }%
}
\newcommand*\svg@ifdvimode{%
  \begingroup%
    \@svg@tempswafalse%
    \ifxetex\else\ifpdf\else%
      \@svg@tempswatrue%
    \fi\fi%
    \if@svg@tempswa%
      \aftergroup\@firstoftwo%
    \else%
      \aftergroup\@secondoftwo%
    \fi%
  \endgroup%
}
\newcommand*\svg@if@nil[1]{%
  \begingroup%
    \def\svg@tempa{#1}%
    \ifx\svg@tempa\@nnil%
      \aftergroup\@firstoftwo%
    \else%
      \aftergroup\@secondoftwo%
    \fi%
  \endgroup%
}
\newcommand*\svg@ifvalueisrelax[1]{%
  \begingroup%
    \def\svg@tempa{#1}%
    \def\svg@tempb{\relax}%
    \ifx\svg@tempa\svg@tempb%
      \aftergroup\@firstoftwo%
    \else%
      \def\svg@tempb{relax}%
      \ifx\svg@tempa\svg@tempb%
        \aftergroup\@firstoftwo%
      \else%
        \aftergroup\@secondoftwo%
      \fi%
    \fi%
  \endgroup%
}
\newcommand*\svg@ifnumber[1]{%
  \begingroup%
    \edef\svg@tempa{#1}%
    \def\svg@tempb{\aftergroup\@secondoftwo}%
    \Ifisinteger{\svg@tempa}{%
      \Ifnumber{\svg@tempa}{%
        \def\svg@tempb{\aftergroup\@firstoftwo}%
      }{}%
    }{}%
    \svg@tempb%
  \endgroup%
}
\newcommand*\svg@ifstrblank[1]{%
  \begingroup%
    \edef\svg@tempa{%
      \noexpand\IfArgIsEmpty{\expandafter\@gobble#1\relax}%
    }%
    \svg@tempa{%
      \aftergroup\@firstoftwo%
    }{%
      \aftergroup\@secondoftwo%
    }%
  \endgroup%
}
\newcommand*\svg@deactivate@dq{}
\AfterPackage+{babel}{%
  \renewcommand*\svg@deactivate@dq{\bbl@deactivate{"}}%
  \providecommand*\bbl@deactivate[1]{}%
}
\newcommand*\svg@sanitize@dq[2]{%
  \begingroup%
    \svg@deactivate@dq%
    \edef\svg@tempa{\endgroup\def\noexpand#1{#2}}%
  \svg@tempa%
}
\svg@newif\if@svg@quotes@found
\newcommand*\svg@quotes@check[1]{%
  \expandafter\svg@quotes@@check#1"\@nil%
}
\newcommand*\svg@quotes@@check{}
\def\svg@quotes@@check#1"#2\@nil{%
  \IfArgIsEmpty{#2}{\@svg@quotes@foundfalse}{\@svg@quotes@foundtrue}%
}
\newcommand\svg@quotes@remove{%
  \kernel@ifstar%
    {\svg@quotes@@remove{\trim@spaces}}%
    {\svg@quotes@@remove{\@firstofone}}%
}
\newcommand*\svg@quotes@@remove[1]{%
  \kernel@ifnextchar[%]
    {\svg@quotes@@@remove{#1}}%
    {\svg@quotes@@@remove{#1}[\@nil]}%
}
\newcommand*\svg@quotes@@@remove{}
\def\svg@quotes@@@remove#1[#2]#3{%
  \begingroup%
    \svg@if@nil{#2}{%
      \svg@sanitize@dq\svg@tempa{#3}%
    }{%
      \svg@sanitize@dq\svg@tempa{#2}%
    }%
    \expandafter\svg@quotes@check\expandafter{\svg@tempa}%
    \edef\svg@tempa{\expandafter#1\expandafter{\svg@tempa}}%
    \expandafter\svg@quotes@@@@remove\svg@tempa"\@nil%
    \edef\svg@tempa{\expandafter#1\expandafter{\svg@tempa}}%
    \svg@ifstrblank{\svg@tempa}{\let\svg@tempa\@empty}{}%
    \edef\svg@tempb{%
      \endgroup%
      \def\noexpand#3{\expandafter\detokenize\expandafter{\svg@tempa}}%
      \if@svg@quotes@found%
        \noexpand\@svg@quotes@foundtrue%
      \else%
        \noexpand\@svg@quotes@foundfalse%
      \fi%
    }%
  \svg@tempb%
}
\newcommand*\svg@quotes@@@@remove{}
\def\svg@quotes@@@@remove#1"#2\@nil{%
  \IfArgIsEmpty{#2}{%
    \edef\svg@tempa{#1}%
  }{%
    \svg@quotes@@@@remove#1#2\@nil%
  }%
}
\newcommand*\svg@quotes@normalize{%
  \kernel@ifstar%
    {\svg@quotes@@normalize{*}}%
    {\svg@quotes@@normalize{}}%
}
\newcommand*\svg@quotes@@normalize[1]{%
  \kernel@ifnextchar[%]
    {\svg@quotes@@@normalize{#1}}%
    {\svg@quotes@@@normalize{#1}[\@nil]}%
}
\newcommand*\svg@quotes@@@normalize{}
\def\svg@quotes@@@normalize#1[#2]#3{%
  \svg@if@nil{#2}{%
    \svg@quotes@remove#1{#3}%
  }{%
    \svg@quotes@remove#1[{#2}]{#3}%
  }%
  \if@svg@quotes@found%
    \ifx#3\@empty\else%
      \edef#3{"#3"}%
    \fi%
  \fi%
}
\newcommand*\svg@ifstrnocase[2]{%
  \begingroup%
    \edef\svg@tempa{%
      \noexpand\svg@quotes@remove[{#1}]{\noexpand\svg@tempa}%
      \noexpand\svg@quotes@remove[{#2}]{\noexpand\svg@tempb}%
    }%
    \svg@tempa%
    \edef\svg@tempa{%
      \endgroup%
      \lowercase{\noexpand\Ifstr{\svg@tempa}{\svg@tempb}}%
    }%
  \svg@tempa%
}
\newcommand*\svg@lowercase[2][\@nil]{%
  \begingroup%
    \svg@if@nil{#1}{%
      \protected@edef\svg@tempa{#2}%
    }{%
      \protected@edef\svg@tempa{#1}%
    }%
    \protected@edef\svg@tempa{%
      \endgroup%
      \lowercase{\noexpand\def\noexpand#2{\svg@tempa}}%
    }%
  \svg@tempa%
}
\newcommand*\svg@remove@leadingchar[2]{%
  \begingroup%
    \svg@sanitize@dq\svg@tempa{#2}%
    \def\svg@tempb{%
      \def\svg@tempa####1\@nil{\def\svg@tempa{####1}}%
      \kernel@ifnextchar#1%
        {\expandafter\svg@tempa\@gobble}%
        {\svg@tempa}%
    }%
    \expandafter\svg@tempb\svg@tempa\@nil%
    \edef\svg@tempb{%
      \endgroup%
      \def\noexpand#2{\svg@tempa}%
    }%
  \svg@tempb%
}
% TODO should not be necessary anymore with LaTeX 2019/10/01 PL3
\newcommand*\svg@filename@parse[2][]{%
  \begingroup%
    \edef\svg@tempb{#1}%
    \svg@sanitize@dq\svg@tempa{#2}%
    \expandafter\filename@parse\expandafter{\svg@tempa}%
    \svg@normalize@path[\@empty]{\filename@area}%
    \svg@remove@leadingchar"\filename@base%
    \ifx\filename@ext\relax\else%
      \expandafter\svg@quotes@check\expandafter{\filename@ext}%
      \if@svg@quotes@found%
        \edef\filename@base{\filename@base"}%
      \fi%
      \expandafter\svg@extension@parse\expandafter{\svg@tempb}%
    \fi%
    \svg@quotes@normalize{\filename@base}%
    \edef\svg@tempa{%
      \endgroup%
      \def\noexpand\filename@area{\filename@area}%
      \def\noexpand\filename@base{\filename@base}%
      \ifx\filename@ext\relax%
        \let\noexpand\filename@ext\noexpand\relax%
      \else%
        \def\noexpand\filename@ext{\filename@ext}%
      \fi%
    }%
  \svg@tempa%
}
\newcommand*\svg@extension@parse[1]{%
  \ifx\filename@ext\relax\else%
    \begingroup%
      \svg@quotes@remove{\filename@ext}%
      \trim@post@space@in\filename@ext%
      \ifx\filename@ext\@empty\else%
        \if@svg@quotes@found%
          \edef\filename@ext{"\filename@ext"}%
        \fi%
      \fi%
      \svg@ifstrnocase{#1}{\filename@ext}{}{%
        \def\svg@tempa##1.##2\@nil##3\@nil{%
          \svg@ifstrblank{##2}{%
            \edef\filename@ext{##1}%
          }{%
            \edef\filename@base{\filename@base.##1}%
            \svg@ifstrnocase{##2}{##3.}{%
              \def\svg@tempb####1.\@nil{\edef\filename@ext{####1}}%
              \svg@tempb##2\@nil%
            }{%
              \svg@tempa##2\@nil##3\@nil%
            }%
          }%
        }%
        \edef\svg@tempb{%
          \noexpand\svg@tempa\filename@ext.\noexpand\@nil#1\noexpand\@nil%
        }%
        \svg@tempb%
      }%
      \svg@ifstrnocase{#1}{\filename@ext}{}{%
        \svg@ifstrblank{#1}{}{%
          \ifx\filename@ext\@empty\else%
            \edef\filename@base{\filename@base.\filename@ext}%
            \let\filename@ext\@empty%
          \fi%
        }%
      }%
      \svg@quotes@normalize{\filename@base}%
      \svg@quotes@normalize{\filename@ext}%
      \edef\svg@tempa{%
        \endgroup%
        \def\noexpand\filename@base{\filename@base}%
        \ifx\filename@ext\@empty%
          \let\noexpand\filename@ext\relax%
        \else%
          \def\noexpand\filename@ext{\filename@ext}%
        \fi%
      }%
    \svg@tempa%
  \fi%
}
% TODO zusammenfassen --> svg@filemoddate + svg@strcmp
% TODO check usage of \svgx@ifexpired (maybe move to package svg)
% TODO check different letter cases
\ifx\pdf@filemoddate\@undefined
  \ifx\filemoddate\@undefined\else
    \ifx\strcmp\@undefined\else
      \newcommand*\svg@IfFileNewer[2]{%
        \begingroup%
          \edef\svg@tempa{\filemoddate{#1}}%
          \edef\svg@tempb{\filemoddate{#2}}%
          \ifnum\strcmp{\svg@tempa}{\svg@tempb}>\z@\relax%
            \aftergroup\@firstoftwo%
          \else%
            \aftergroup\@secondoftwo%
          \fi%
        \endgroup%
      }%
    \fi
  \fi
\else
  \ifx\pdf@strcmp\@undefined\else
    \newcommand*\svg@IfFileNewer[2]{%
      \begingroup%
        \edef\svg@tempa{\pdf@filemoddate{#1}}%
        \edef\svg@tempb{\pdf@filemoddate{#2}}%
        \ifnum\pdf@strcmp{\svg@tempa}{\svg@tempb}>\z@\relax%
          \aftergroup\@firstoftwo%
        \else%
          \aftergroup\@secondoftwo%
        \fi%
      \endgroup%
    }%
  \fi
\fi
\newcommand*\svg@shell@mkdir[1]{%
  \begingroup%
    \svg@quotes@remove[{#1}]{\svg@tempa}%
    \svg@normalize@path{\svg@tempa}%
    \ifx\svg@tempa\@currdir\else%
      \ShellEscape{\svg@shell@@mkdir{\svg@tempa}}%
    \fi%
  \endgroup%
}
\newcommand*\svg@shell@mv[2]{%
  \begingroup%
    \edef\svg@tempa{%
      \noexpand\svg@tempb{#1}{\noexpand\svg@tempa}%
      \noexpand\svg@tempb{#2}{\noexpand\svg@tempb}%
    }%
    \def\svg@tempb##1##2{%
      \svg@filename@parse{##1}%
      \svg@normalize@path{\filename@area}%
      \svg@quotes@remove[%
        \filename@area\filename@base%
        \ifx\filename@ext\relax\else.\filename@ext\fi%
      ]{##2}%
    }%
    \svg@tempa%
    \IfFileExists{"\svg@tempa"}{%
      \ifx\svg@tempa\svg@tempb\else%
        \ShellEscape{\svg@shell@@mv\space"\svg@tempa"\space"\svg@tempb"}%
      \fi%
    }{}%
  \endgroup%
}
\newcommand*\svg@shell@rm[1]{%
  \begingroup%
    \svg@filename@parse{#1}%
    \svg@normalize@path{\filename@area}%
    \svg@quotes@remove[%
      \filename@area\filename@base%
      \ifx\filename@ext\relax\else.\filename@ext\fi%
    ]{\svg@tempa}%
    \IfFileExists{"\svg@tempa"}{%
      \ShellEscape{\svg@shell@@rm\space"\svg@tempa"}%
    }{}%
  \endgroup%
}
\svg@ifwindowsdetected{%
  \newcommand*\svg@shell@@mkdir[1]{if not exist "#1" mkdir "#1"}%
  \newcommand*\svg@shell@@mv{move}%
  \newcommand*\svg@shell@@rm{del}%
}{%
  \newcommand*\svg@shell@@mkdir[1]{mkdir -p "#1"}%
  \newcommand*\svg@shell@@mv{mv}%
  \newcommand*\svg@shell@@rm{rm}%
}
\newcommand*\svg@normalize@path[2][\@currdir]{%
  \begingroup%
    \svg@quotes@remove*[{#2}]{\svg@tempa}%
    \Ifstr{\svg@tempa}{/}{\let\svg@tempa\@currdir}{}%
    \expandafter\svg@normalize@@path\svg@tempa//\@nil%
    \ifx\svg@tempa\@empty%
      \edef\svg@tempa{#1}%
      \@svg@quotes@foundfalse%
    \else%
      \ifx\svg@tempa\@currdir%
        \@svg@quotes@foundfalse%
      \fi%
    \fi%
    \edef\svg@tempb{%
      \endgroup%
      \if@svg@quotes@found%
        \def\noexpand#2{"\svg@tempa"}%
      \else%
        \def\noexpand#2{\svg@tempa}%
      \fi%
    }%
  \svg@tempb%
}
\newcommand*\svg@normalize@@path{}
\def\svg@normalize@@path#1/#2/\@nil{%
  \IfArgIsEmpty{#2}{%
    \let\svg@tempa\@empty%
    \IfArgIsEmpty{#1}{}{\edef\svg@tempa{\trim@spaces{#1}/}}%
  }{%
    \svg@normalize@@path#2/\@nil%
    \edef\svg@tempa{\trim@spaces{#1}/\svg@tempa}%
  }%
}
\DefineFamily{SVG}
\DefineFamilyMember{SVG}
\newcommand*\svg@deprecated@key[3][svg]{%
  \PackageWarning{#1}{%
    The option key `#2' is deprecated. \MessageBreak%
    It's recommended to use `#3'\MessageBreak%
    instead%
  }%
  \FamilyOptions{SVG}{#3}%
}
\svg@newif\if@svg@use@xcolor
\FamilyBoolKey{SVG}{usexcolor}{@svg@use@xcolor}
\DeclareOption{noxcolor}{\FamilyOptions{SVG}{usexcolor=false}}
\svg@newif\if@svg@use@transparent
\FamilyBoolKey{SVG}{usetransparent}{@svg@use@transparent}
\DeclareOption{notransparent}{\FamilyOptions{SVG}{usetransparent=false}}
\AtEndOfPackage{%
  \RelaxFamilyKey{SVG}{usexcolor}%
  \RelaxFamilyKey{SVG}{usetransparent}%
  \if@svg@use@xcolor%
    \RequirePackage{xcolor}[2016/05/11]%
  \else%
    \AfterPackage*{xcolor}{%
      \PackageWarning{svg}{Package `xcolor' was loaded anyway}%
    }%
  \fi%
  \if@svg@use@transparent%
    \RequirePackage{transparent}[2019/11/29]%
  \else%
    \AfterPackage*{transparent}{%
      \PackageWarning{svg}{Package `transparent' was loaded anyway}%
    }%
  \fi%
  \AfterPackage*{transparent}{%
    \ifcsname Gin@driver\endcsname%
      \RequirePackage{pgfsys}%
    \fi%
  }%
}
\newcommand*\svg@ink@mode{}
\DefineFamilyKey{SVG}{inkscape}[true]{%
  \svg@sanitize@dq\svg@tempb{#1}%
  \FamilySetNumerical{SVG}{inkscape}{svg@tempa}{%
    {false}{0},{off}{0},{no}{0},%
    {true}{1},{on}{1},{yes}{1},{auto}{1},{onlynewer}{1},{newer}{1},%
    {forced}{2},{force}{2},{overwrite}{2},%
    {pdf}{3},{PDF}{3},{eps}{4},{EPS}{4},{ps}{5},{PS}{5},{png}{6},{PNG}{6},%
    {drawing}{7},{crop}{7},%
    {page}{8},{nocrop}{8},%
    {latex}{9},{exportlatex}{9},{latexexport}{9},%
    {tex}{9},{exporttex}{9},{texexport}{9},%
    {nolatex}{10},{noexportlatex}{10},{nolatexexport}{10},{latexnoexport}{10},%
    {notex}{10},{noexporttex}{10},{notexexport}{10},{texnoexport}{10},%
    {raw}{10},{plain}{10},{simple}{10}%
  }{\svg@tempb}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\svg@tempa\relax% false
      \def\svg@ink@mode{0}%
    \or% true
      % TODO Warning! check when executed?
      \ifx\svg@IfFileNewer\@undefined%
        \def\svg@ink@mode{2}%
      \else%
        \def\svg@ink@mode{1}%
      \fi%
    \or% forced
      \def\svg@ink@mode{2}%
    \or% pdf
      \FamilyOptions{SVG}{inkscapeformat=pdf}%
    \or% eps
      \FamilyOptions{SVG}{inkscapeformat=eps}%
    \or% ps
      \FamilyOptions{SVG}{inkscapeformat=ps}%
    \or% png
      \FamilyOptions{SVG}{inkscapeformat=png}%
    \or% drawing
      \FamilyOptions{SVG}{inkscapearea=drawing}%
    \or% page
      \FamilyOptions{SVG}{inkscapearea=page}%
    \or% latex
      \FamilyOptions{SVG}{inkscapelatex=true}%
    \or% nolatex
      \FamilyOptions{SVG}{inkscapelatex=false}%
    \fi%
  \else% dpi
    \FamilyOptions{SVG}{inkscapedpi=#1}%
    \ifx\FamilyKeyState\FamilyKeyStateProcessed\else% legacy option
      \svg@quotes@remove[{#1}]{\svg@tempb}%
      \def\svg@tempa##1-##2\@nil{%
        \IfArgIsEmpty{##2}{\let\svg@tempb\@empty}{%
          \def\svg@tempa####1-\@nil{\def\svg@tempb{-####1}}%
          \svg@tempa##2\@nil%
        }%
        \edef\svg@tempa{\trim@spaces{##1}}%
      }%
      \expandafter\svg@tempa\svg@tempb-\@nil%
      \ifx\svg@tempa\@empty\else%
        \if@svg@quotes@found%
          \edef\svg@tempa{"\svg@tempa"}%
        \fi%
      \fi%
      \@svg@tempswafalse%
      \ifx\svg@tempa\@empty\else\@svg@tempswatrue\fi%
      \ifx\svg@tempb\@empty\else\@svg@tempswatrue\fi%
      \if@svg@tempswa%
        \PackageWarning{svg}{%
          Setting%
          \ifx\svg@tempa\@empty\else%
            \space the executable \ifx\svg@tempb\@empty\else and \fi%
          \fi%
          \ifx\svg@tempb\@empty\else%
            \space associated options%
          \fi%
          \MessageBreak%
          for Inkscape should be done with%
          \ifx\svg@tempa\@empty\else%
            \MessageBreak%
            `inkscapeexe=\svg@tempa'%
          \fi%
          \ifx\svg@tempb\@empty\else%
            \MessageBreak%
            \ifx\svg@tempa\@empty\else and \fi`inkscapeopt={\svg@tempb}'%
          \fi%
          \MessageBreak%
          Nevertheless, this was done by now anyway%
        }%
        \edef\svg@tempa{%
          \ifx\svg@tempa\@empty\else%
            \noexpand\FamilyOptions{SVG}{inkscapeexe=\svg@tempa}%
          \fi%
          \ifx\svg@tempb\@empty\else%
            \noexpand\FamilyOptions{SVG}{inkscapeopt=\svg@tempb}%
          \fi%
        }%
        \svg@tempa%
      \fi%
    \fi%
  \fi%
}
\DeclareOption{on}{\AtEndOfPackage{\FamilyOptions{SVG}{inkscape=forced}}}
\DeclareOption{forced}{\AtEndOfPackage{\FamilyOptions{SVG}{inkscape=forced}}}
\DeclareOption{auto}{\AtEndOfPackage{\FamilyOptions{SVG}{inkscape=true}}}
\DeclareOption{off}{\AtEndOfPackage{\FamilyOptions{SVG}{inkscape=false}}}
% TODO use counter
\newcommand*\svg@ink@ver{\m@ne}
\DefineFamilyKey{SVG}{inkscapeversion}[true]{%
  \FamilySetNumerical{SVG}{inkscape}{svg@tempa}{%
    {true}{0},{on}{0},{yes}{0},{auto}{0},{detect}{0},{determine}{0},{fetch}{0},%
    {enquire}{0},{identify}{0},{request}{0},{retrieve}{0},{obtain}{0}%
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \renewcommand*\svg@ink@ver{\m@ne}%
  \else%
    \def\svg@tempa##1.##2\@nil{%
      \svg@ifnumber{##1}{%
        \renewcommand*\svg@ink@ver{##1}%
        \FamilyKeyStateProcessed%
      }{}%
    }%
    \svg@tempa#1.\@nil%
  \fi%
}
\newcommand*\svg@ink@exe{inkscape}
\DefineFamilyKey{SVG}{inkscapeexe}{%
  \svg@sanitize@dq\svg@ink@exe{#1}%
  \FamilyKeyStateProcessed%
}
\newcommand*\svg@ink@opt{}
\DefineFamilyKey{SVG}{inkscapeopt}{%
  \renewcommand*\svg@ink@opt{#1}%
  \FamilyKeyStateProcessed%
}
\def\svg@tempa#1{%
  \AtBeginDocument{%
    \DefineFamilyKey[]{SVG}{#1}[]{%
      \PackageError{svg}{Option `#1' too late}{%
        Option `#1' can only be set within\MessageBreak%
        the preamble but you have tried to set it up later.%
      }%
      \FamilyKeyStateProcessed%
    }%
  }%
}
\svg@tempa{inkscapeexe}
\svg@tempa{inkscapeversion}
\svg@ifdvimode{
  \newcommand*\svg@ink@format{eps}
}{
  \newcommand*\svg@ink@format{pdf}
}
\DefineFamilyKey{SVG}{inkscapeformat}{%
  \FamilySetNumerical{SVG}{inkscapeformat}{svg@tempa}{%
    {pdf}{0},{PDF}{0},{eps}{1},{EPS}{1},{ps}{2},{PS}{2},{png}{3},{PNG}{3}%
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\svg@tempa\relax% latex
      \renewcommand*\svg@ink@format{pdf}%
    \or% eps
      \renewcommand*\svg@ink@format{eps}%
    \or% ps
      \renewcommand*\svg@ink@format{ps}%
    \or% png
      \renewcommand*\svg@ink@format{png}%
    \fi%
  \fi%
}
\svg@newif\if@svg@ink@latex
\FamilyBoolKey{SVG}{inkscapelatex}{@svg@ink@latex}
\FamilyBoolKey{SVG}{latex}{@svg@ink@latex}
\FamilyBoolKey{SVG}{tex}{@svg@ink@latex}
\newcommand*\svg@ink@area{}
\DefineFamilyKey{SVG}{inkscapearea}{%
  \FamilySetNumerical{SVG}{inkscapearea}{svg@tempa}{%
    {drawing}{0},{crop}{0},%
    {page}{1},{nocrop}{1}%
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\svg@tempa\relax% drawing
      \renewcommand*\svg@ink@area{-D}%
    \else% page
      \renewcommand*\svg@ink@area{-C}%
    \fi%
  \fi%
}
\newcommand*\svg@ink@dpi{}
\let\svg@ink@dpi\relax
\DefineFamilyKey{SVG}{inkscapedpi}{%
  \FamilyKeyStateUnknownValue%
  \svg@ifvalueisrelax{#1}{%
    \let\svg@ink@dpi\relax%
    \FamilyKeyStateProcessed%
  }{%
    \svg@lowercase[{#1}]{\svg@tempb}%
    \def\svg@tempa##1dpi##2\@nil{\def\svg@tempa{##1}}%
    \expandafter\svg@tempa\svg@tempb dpi\@nil%
    \svg@ifnumber{\svg@tempa}{%
      \edef\svg@ink@dpi{\svg@tempa}%
      \FamilyKeyStateProcessed%
    }{}%
  }%
}
\DefineFamilyKey{SVG}{inkscapedensity}{\FamilyOptions{SVG}{inkscapedpi=#1}}
\newcommand*\svg@ink@cmd[3]{%
  \svg@ink@exe\space"#1"\space\svg@ink@area\space%
  \ifx\svg@ink@dpi\relax\else--export-dpi=\svg@ink@dpi\space\fi%
  \if@svg@ink@latex--export-latex\space\fi%
  \ifx\svg@ink@opt\@empty\else\svg@ink@opt\space\fi%
  \ifnum\svg@ink@ver=\z@% legacy mode
    --without-gui\space%
    --export-#3="#2"\space%
  \else%
    --export-filename="#2"\space%
  \fi%
}
\DefineFamilyKey{SVG}{svgpath}{%
  \PackageWarning{svg}{%
    The key `svgpath' is deprecated. It's recommended\MessageBreak%
    to use `\string\svgpath' instead%
  }%
  \ifx\svgpath\@undefined%
    \AtEndOfPackage{\svgpath{{#1}}}%
  \else%
    \svgpath{{#1}}%
  \fi%
  \FamilyKeyStateProcessed%
}
\newcommand*\svg@file@ext{svg}
\DefineFamilyKey{SVG}{svgextension}{%
  \svg@quotes@remove*[{#1}]{\svg@file@ext}%
  \svg@remove@leadingchar.\svg@file@ext%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{SVG}{svgformat}{\FamilyOptions{SVG}{svgextension=#1}}
\newcommand*\svg@ink@path{}
\DefineFamilyKey{SVG}{inkscapepath}{%
  \svg@sanitize@dq\svg@tempb{#1}%
  \FamilySetNumerical{SVG}{inkscapepath}{svg@tempa}{%
    {svgpath}{0},{svgdir}{0},%
    {svgsubpath}{1},{svgsubdir}{1},%
    {basepath}{2},{basedir}{2},{jobpath}{2},{jobdir}{2},%
    {basesubpath}{3},{basesubdir}{3},{jobsubpath}{3},{jobsubdir}{3}%
  }{\svg@tempb}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\svg@tempa\relax% svgpath
      \renewcommand*\svg@ink@path{\svg@file@path}%
    \or% svgsubpath
      \renewcommand*\svg@ink@path{\svg@file@path svg-inkscape/}%
    \or% basepath
      \renewcommand*\svg@ink@path{\@currdir}%
    \or% basesubpath
      \renewcommand*\svg@ink@path{\@currdir svg-inkscape/}%
    \fi%
  \else%
    \edef\svg@ink@path{\svg@tempb}%
    \svg@normalize@path{\svg@ink@path}%
    \FamilyKeyStateProcessed%
  \fi%
}
\newcommand*\svg@ink@name{%
  \svg@file@name\string_\svg@file@ext\if@svg@ink@latex-latex\fi%
}
\DefineFamilyKey{SVG}{inkscapename}{%
  \svg@ifvalueisrelax{#1}{%
    \renewcommand*\svg@ink@name{%
      \svg@file@name\string_\svg@file@ext\if@svg@ink@latex-latex\fi%
    }%
  }{%
    \renewcommand*\svg@ink@name{#1}%
  }%
  \FamilyKeyStateProcessed%
}
\newcommand*\svg@param@width{\z@}
\DefineFamilyKey{SVG}{width}{%
  \svg@ifvalueisrelax{#1}{%
    \renewcommand*\svg@param@width{\z@}%
    \FamilyKeyStateProcessed%
  }{%
    \FamilySetUseLengthMacro{SVG}{width}{\@tempa}{#1}%
    \ifx\FamilyKeyState\FamilyKeyStateProcessed%
      \ifdim\@tempa<\z@\relax%
        \FamilyKeyStateUnknownValue%
      \else%
        \def\svg@param@width{\dimexpr\glueexpr#1\relax\relax}%
      \fi%
    \fi%
  }%
}
\newcommand*\svg@param@height{\z@}
\DefineFamilyKey{SVG}{height}{%
  \svg@ifvalueisrelax{#1}{%
    \renewcommand*\svg@param@height{\z@}%
    \FamilyKeyStateProcessed%
  }{%
    \FamilySetUseLengthMacro{SVG}{height}{\@tempa}{#1}%
    \ifx\FamilyKeyState\FamilyKeyStateProcessed%
      \ifdim\@tempa<\z@\relax%
        \FamilyKeyStateUnknownValue%
      \else%
        \def\svg@param@height{\dimexpr\glueexpr#1\relax\relax}%
      \fi%
    \fi%
  }%
}
\svg@newif\if@svg@param@distort
\FamilyBoolKey{SVG}{distort}{@svg@param@distort}
\DefineFamilyKey{SVG}{keepaspectratio}[true]{%
  \FamilySetBool{SVG}{keepaspectratio}{@svg@tempswa}{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \if@svg@tempswa%
      \FamilyExecuteOptions[.svg.sty]{SVG}{distort=false}%
    \else%
      \FamilyExecuteOptions[.svg.sty]{SVG}{distort=true}%
    \fi%
  \fi%
}
\newcommand*\svg@param@scale{1}
\DefineFamilyKey{SVG}{scale}{%
  \FamilyKeyStateUnknownValue%
  \svg@ifvalueisrelax{#1}{%
    \renewcommand*\svg@param@scale{1}%
    \FamilyKeyStateProcessed%
  }{%
    \Ifisdimension{#1\p@}{%
      \ifdim\dimexpr#1\p@\relax>\z@\relax%
        \renewcommand*\svg@param@scale{#1}%
        \FamilyKeyStateProcessed%
      \fi%
    }{}%
  }%
}
\newcommand*\svg@param@pretex{}
\let\svg@param@pretex\relax
\DefineFamilyKey{SVG}{pretex}{%
  \svg@ifvalueisrelax{#1}{%
    \let\svg@param@pretex\relax%
  }{%
    \def\svg@param@pretex{#1}%
  }%
  \FamilyKeyStateProcessed%
}
\newcommand*\svg@param@apptex{}
\let\svg@param@apptex\relax
\DefineFamilyKey{SVG}{apptex}{%
  \svg@ifvalueisrelax{#1}{%
    \let\svg@param@apptex\relax%
  }{%
    \def\svg@param@apptex{#1}%
  }%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{SVG}{postex}{%
  \svg@deprecated@key{postex=#1}{apptex=#1}%
}
\newcounter{svg@param@lastpage}
\DefineFamilyKey{SVG}{lastpage}[true]{%
  \FamilySetNumerical{SVG}{lastpage}{svg@tempa}{%
    {false}{0},{off}{0},{no}{0},{ignore}{0},%
    {true}{1},{on}{1},{yes}{1},{auto}{1}%
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\svg@tempa\relax% false
      \FamilySetCounter{SVG}{lastpage}{svg@param@lastpage}{\m@ne}%
    \or% true
      \FamilySetCounter{SVG}{lastpage}{svg@param@lastpage}{\z@}%
    \fi%
  \fi%
}
\svg@ifdvimode{
  \FamilyExecuteOptions{SVG}{lastpage=false}
}{
  \FamilyExecuteOptions{SVG}{lastpage=true}
}
\svg@newif\if@svg@draft
\FamilyBoolKey{SVG}{draft}{@svg@draft}
\AfterPackage*{graphicx}{\ifGin@draft\@svg@drafttrue\fi}
\DefineFamilyMember[.dummy]{SVG}
\newcommand*\svg@dummy@key[2][\@nil]{%
  \svg@if@nil{#1}{%
    \DefineFamilyKey[.dummy]{SVG}{#2}{%
      \svg@dummy@key@wrn{#2}%
      \FamilyKeyStateProcessed%
    }%
  }{%
    \DefineFamilyKey[.dummy]{SVG}{#2}[{#1}]{%
      \svg@dummy@key@wrn{#2}%
      \FamilyKeyStateProcessed%
    }%
  }%
  \AfterPackage{svg-extract}{\RelaxFamilyKey[.dummy]{SVG}{#2}}%
}
\newcommand*\svg@dummy@key@wrn[1]{%
  \PackageWarning{svg}{%
    The option key `#1' can only\MessageBreak%
    be used with package `svg-extract', but\MessageBreak%
    you didn't load it%
  }%
}
\svg@dummy@key[true]{extract}
\svg@dummy@key{extractformat}
\svg@dummy@key[true]{pdf}
\svg@dummy@key[true]{eps}
\svg@dummy@key{extractpreamble}
\svg@dummy@key{preamble}
\svg@dummy@key{extractpreambleend}
\svg@dummy@key{end}
\svg@dummy@key{extractruns}
\svg@dummy@key{extractiterations}
\svg@dummy@key{latexexe}
\svg@dummy@key{pdflatex}
\svg@dummy@key{latexext}
\svg@dummy@key{latexopt}
\svg@dummy@key{dvipsopt}
\svg@dummy@key{pstoepsopt}
\svg@dummy@key{pstopdfopt}
\svg@dummy@key{pdftoepsopt}
\svg@dummy@key{pdftopsopt}
\svg@dummy@key{pdftops}
\svg@dummy@key[true]{convert}
\svg@dummy@key{convertformat}
\svg@dummy@key[true]{png}
\svg@dummy@key{convertdpi}
\svg@dummy@key{convertdensity}
\svg@dummy@key{magickexe}
\svg@dummy@key{magicksetting}
\svg@dummy@key{magickoperator}
\svg@dummy@key{gsexe}
\svg@dummy@key{gsopt}
\svg@dummy@key{gsdevice}
\svg@dummy@key{extractpath}
\svg@dummy@key{path}
\svg@dummy@key{extractname}
\svg@dummy@key{name}
\svg@dummy@key{extractwidth}
\svg@dummy@key{extractheight}
\svg@dummy@key{extractdistort}
\svg@dummy@key{extractkeepaspectratio}
\svg@dummy@key{extractscale}
\svg@dummy@key{extractpretex}
\svg@dummy@key{extractapptex}
\svg@dummy@key{extractpostex}
\svg@dummy@key[true]{clean}
\svg@dummy@key[true]{clear}
\svg@dummy@key[true]{exclude}
% TODO \FamilyExecuteOptions right at definition of each key?!
\FamilyExecuteOptions{SVG}{%
  inkscape=true,inkscapeversion=auto,inkscapepath=basesubdir,%
  inkscapelatex=true,inkscapearea=drawing,distort=false,%
  usexcolor=true,usetransparent=true%
}
\FamilyProcessOptions{SVG}
\DefineFamilyMember[.param]{SVG}
\newcommand*\svg@local@param@use{\svg@local@param@deprecated}
\newcommand*\svg@local@param@def[1]{\l@addto@macro\svg@local@param@use{#1}}
\newcommand*\svg@local@param@set[1]{%
  \svg@local@param@use%
  \FamilyOptions{SVG}{#1}%
  \Ifstr{\svg@ink@format}{png}{\FamilyOptions{SVG}{inkscapelatex=false}}{}%
  \@svg@tempswatrue%
  \ifdim\svg@param@width>\z@\relax\ifdim\svg@param@height>\z@\relax%
    \@svg@tempswafalse%
  \fi\fi%
  \if@svg@tempswa%
    \FamilyExecuteOptions[.svg.sty]{SVG}{distort=false}%
  \fi%
}
% TODO adapt to key 'size', priority of width over scale or other way around?
\newcommand*\svg@local@param@deprecated{%
  \begingroup%
    \let\svg@tempa\@empty%
    \ifx\svgwidth\@undefined\else%
      \ifx\svgwidth\relax%
        \l@addto@macro\svg@tempa{,width=\relax}%
      \else%
        \l@addto@macro\svg@tempa{,width=\svgwidth}%
      \fi%
    \fi%
    \ifx\svgscale\@undefined\else%
      \ifx\svgscale\relax%
        \l@addto@macro\svg@tempa{,scale=\relax}%
      \else%
        \l@addto@macro\svg@tempa{,scale=\svgscale}%
      \fi%
    \fi%
    \ifx\svg@tempa\@empty%
      \def\svg@tempa{\endgroup}%
    \else%
      \def\svg@tempb,##1\@nil{\edef\svg@tempa{##1}}%
      \expandafter\svg@tempb\svg@tempa\@nil%
      \PackageWarning{svg}{%
        You should specify the image size with parameters\MessageBreak%
        `width' and `height' or `scale' instead of using\MessageBreak%
        `\string\svgwidth' or `\string\svgscale'. Nevertheless,\MessageBreak%
        parameter(s) `\svg@tempa' will be set%
      }%
      \global\let\svgwidth\@undefined%
      \global\let\svgscale\@undefined%
      \edef\svg@tempa{%
        \endgroup%
        \noexpand\FamilyOptions{SVG}{\svg@tempa}%
      }%
    \fi%
  \svg@tempa%
}
\newcommand*\svgsetup{\FamilyOptions{SVG}}
\newcommand*\setsvg{\FamilyOptions{SVG}}
\newcommand*\svg@input@path{}
\let\svg@input@path\input@path
\newcommand*\svgpath[1]{%
  \def\svg@tempa##1\@nil{%
    \ifx\svg@tempb\bgroup%
      \def\svg@input@path{#1}%
    \else%
      \def\svg@input@path{{#1}}%
    \fi%
  }%
  \futurelet\svg@tempb\svg@tempa#1\@nil%
}
\newcommand*\svg@ink@file{}
% TODO Umlaute in Dateinamen? Geht das mit \edef?
\newcommand*\includesvg[2][]{%
  \begingroup%
    \svg@local@param@set{#1}%
    \svg@get@file{#2}{\svg@file@ext}%
    \svg@normalize@name{svg}{inkscape}{svg@ink}%
    \ifx\svg@ink@name\@empty\@svg@file@foundfalse\fi%
    \if@svg@file@found%
      \edef\svg@ink@file{\svg@ink@path\svg@ink@name.\svg@ink@format}%
      \svg@ink@run{\svg@file@base}{\svg@ink@file}{\svg@ink@format}%
      \IfFileExists{\svg@ink@file}{}{%
        \def\svg@tempa{\svg@ink@error{\svg@ink@file}{}}%
        \@svg@file@foundfalse%
      }%
      \if@svg@ink@latex%
        \IfFileExists{\svg@ink@file_tex}{}{%
          \if@svg@file@found%
            \def\svg@tempa{\svg@ink@error{\svg@ink@file_tex}{\svg@ink@file}}%
          \else%
            \def\svg@tempa{\svg@ink@error{\svg@ink@file,\svg@ink@file_tex}{}}%
          \fi%
          \@svg@file@foundfalse%
        }%
      \fi%
      \if@svg@file@found%
        \if@svg@ink@run\ifnum\pdf@shellescape=\@ne\relax\else%
          \PackageWarning{svg}{%
            You didn't pass `--shell-escape' flag so it was\MessageBreak%
            not possible to (re)launch the Inkscape export for\MessageBreak%
            `\svg@file@base'%
          }%
        \fi\fi%
        \begingroup%
          \svg@process{\svg@ink@path}{\svg@ink@name}{\svg@ink@format}%
        \endgroup%
      \else%
        \svg@tempa{\svg@file@base}%
      \fi%
    \fi%
  \endgroup%
}
\svg@local@param@def{%
  \DefineFamilyKey[.param]{SVG}{lastpage}[true]{%
    \FamilySetNumerical{SVG}{lastpage}{svg@tempa}{%
      {false}{0},{off}{0},{no}{0},{ignore}{0},%
      {true}{1},{on}{1},{yes}{1},{auto}{1}%
    }{#1}%
    \ifx\FamilyKeyState\FamilyKeyStateProcessed%
      \ifcase\svg@tempa\relax% false
        \FamilySetCounter{SVG}{lastpage}{svg@param@lastpage}{\m@ne}%
      \or% true
        \FamilySetCounter{SVG}{lastpage}{svg@param@lastpage}{\z@}%
      \fi%
    \else%
      \FamilySetCounter{SVG}{lastpage}{svg@param@lastpage}{#1}%
      \ifnum\value{svg@param@lastpage}<\@ne\relax%
        \FamilyKeyStateUnknownValue%
      \fi%
    \fi%
  }%
}
\newcommand*\svg@param@angle{0}
\svg@local@param@def{%
  \DefineFamilyKey[.param]{SVG}{angle}{%
    \FamilyKeyStateUnknownValue%
    \Ifisdimension{#1\p@}{%
      \renewcommand*\svg@param@angle{#1}%
      \FamilyKeyStateProcessed%
    }{}%
  }%
}
\newcommand*\svg@param@origin{c}
\svg@local@param@def{%
  \DefineFamilyKey[.param]{SVG}{origin}[c]{%
    \renewcommand*\svg@param@origin{#1}%
    \FamilyKeyStateProcessed%
  }%
}
\newcommand*\includeinkscape[2][]{%
  \begingroup%
    \svg@filename@parse{#2}%
    \ifx\filename@ext\relax\else%
      \@svg@tempswafalse%
      \def\svg@tempb{\svg@filename@parse[\relax]{#2}}%
      \@tfor\svg@tempa:={pdf}{eps}{ps}{png}\do{%
        \svg@ifstrnocase{\svg@tempa}{\filename@ext}{%
          \edef\svg@tempb{%
            \noexpand\FamilyOptions{SVG}{inkscapeformat=\svg@tempa}%
            \def\noexpand\filename@base{\filename@base.\filename@ext}%
          }%
          \@svg@tempswatrue%
        }{%
          \svg@ifstrnocase{\svg@tempa_tex}{\filename@ext}{%
            \def\svg@tempb##1_##2\@nil{\def\svg@tempb{##1}}%
            \expandafter\svg@tempb\filename@ext\@nil%
            \edef\svg@tempb{%
              \noexpand\FamilyOptions{SVG}{inkscapeformat=\svg@tempa}%
              \noexpand\FamilyOptions{SVG}{inkscapelatex=true}%
              \def\noexpand\filename@base{\filename@base.\svg@tempb}%
            }%
            \@svg@tempswatrue%
          }{}%
        }%
        \if@svg@tempswa%
          \@break@tfor%
        \fi%
      }%
      \svg@tempb%
    \fi%
    \svg@local@param@set{#1}%
    \svg@get@file[\svg@ink@path]{\filename@area\filename@base}{\svg@ink@format}%
    \if@svg@file@found%
      \if@svg@ink@latex%
        \IfFileExists{\svg@file@base_tex}{}{%
          \@svg@file@foundfalse%
          \svg@ink@error{\svg@file@base_tex}{\svg@file@base}{}%
        }%
      \fi%
      \if@svg@file@found%
        \begingroup%
          \svg@process{\svg@file@path}{\svg@file@name}{\svg@ink@format}%
        \endgroup%
      \fi%
    \fi%
  \endgroup%
}
\svg@newif\if@svg@ink@run
\newcommand*\svg@ink@run[3]{%
  \ifcase\svg@ink@mode\relax% false
    \@svg@ink@runfalse%
  \or% true
    \svg@IfFileNewer{#1}{#2}{\@svg@ink@runtrue}{\@svg@ink@runfalse}%
    \if@svg@ink@latex%
      \IfFileExists{#2_tex}{%
        \if@svg@ink@run\ifnum\pdf@shellescape=\@ne\relax%
          \svg@IfFileNewer{#2_tex}{#2}{%
            \@svg@ink@runfalse%
            \PackageWarning{svg}{%
              Since the encountered filedate of file\MessageBreak%
              `#2_tex'\MessageBreak%
              is newer than\MessageBreak%
              `#2'\MessageBreak%
              it's supposed that you customized this file. To\MessageBreak%
              avoid an accidental overwriting of this file, the\MessageBreak%
              Inkscape export won't be done. If you want to\MessageBreak%
              overwrite the existing file, please set parameter\MessageBreak%
              `inkscape=force'%
            }%
          }{}%
        \fi\fi%
      }{\@svg@ink@runtrue}%
    \fi%
  \or% forced
    \@svg@ink@runtrue%
  \fi%
  \if@svg@ink@run\ifnum\pdf@shellescape=\@ne\relax%
    \Ifstr{#3}{png}{%
      \ifx\svg@ink@dpi\relax%
        \FamilyOptions{SVG}{inkscapedpi=300}%
      \fi%
    }{}%
    \svg@shell@mkdir{\svg@ink@path}%
    \PackageInfo{svg}{%
      Exporting `#1'%
      \ifx\svg@ink@opt\@empty\else\space with added options `\svg@ink@opt'\fi%
    }%
    % TODO \pdfmdfivesum{svg-example.svg}
    \begingroup%
      \edef\svg@tempa{%
        \noexpand\svg@quotes@remove[{#1}]{\noexpand\svg@tempa}%
        \noexpand\svg@quotes@remove[{#2}]{\noexpand\svg@tempb}%
      }%
      \svg@tempa%
      \ShellEscape{\svg@ink@cmd{\svg@tempa}{\svg@tempb}{#3}}%
    \endgroup%
  \fi\fi%
}
\newcommand*\svg@process[3]{\svg@ink@include{#1}{#2}{#3}}
\newsavebox\svg@box
\newcommand*\svg@ink@include[3]{%
  \svg@param@size@check%
  \svg@set@input@path%
  \@svg@tempswatrue%
  \if@svg@draft%
    \@svg@tempswafalse%
  \fi%
  \if@svg@ink@latex\else%
    \@svg@tempswafalse%
  \fi%
  \edef\svg@tempa{{#1#2}.#3}%
  \if@svg@tempswa%
    \svg@patches{\svg@tempa}%
    \svg@quotes@remove[\expandafter\@firstofone\svg@tempa]{\svg@tempa}%
    \ifGin@draft%
      \FamilySetCounter{SVG}{lastpage}{svg@param@lastpage}{1}%
    \else%
      \ifnum\value{svg@param@lastpage}=\z@\relax%
        \svg@ifdvimode{}{%
          \Ifstr{#3}{pdf}{%
            \edef\svg@tempb{\noexpand\svg@get@lastpage{"\svg@tempa"}}%
            \svg@tempb%
          }{}%
        }%
      \fi%
    \fi%
    \edef\svg@tempa{%
      \ifx\svg@param@pretex\relax\else%
        \noexpand\svg@param@pretex%
      \fi%
      \noexpand\input{"\svg@tempa_tex"}%
      \ifx\svg@param@apptex\relax\else%
        \noexpand\svg@param@apptex%
      \fi%
    }%
    \if@svg@param@distort%
      \def\svg@tempb{\resizebox*{\svg@param@width}{\svg@param@height}}%
    \else%
      \let\svg@tempb\@firstofone%
    \fi%
    \ifx\transparent\@undefined%
      \@svg@tempswatrue%
      \let\transparent\svg@transparent%
    \else%
      \@svg@tempswafalse%
    \fi%
    \sbox\svg@box{\svg@tempb{\svg@tempa}}%
    \if@svg@tempswa%
      \let\transparent\@undefined%
    \fi%
    \ifdim\dimexpr\svg@param@angle\p@\relax=\z@\relax%
      \let\svg@tempb\@firstofone%
    \else%
      \edef\svg@tempb{%
        \noexpand\rotatebox[origin=\svg@param@origin]{\svg@param@angle}%
      }%
    \fi%
    \svg@tempb{\usebox\svg@box}%
  \else%
    \def\svg@tempb{%
      draft\if@svg@draft\else=false\fi%
    }%
    \ifdim\svg@param@width>\z@\relax%
      \l@addto@macro\svg@tempb{,width=\svg@param@width}%
    \fi%
    \ifdim\svg@param@height>\z@\relax%
      \l@addto@macro\svg@tempb{,height=\svg@param@height}%
    \fi%
    \l@addto@macro\svg@tempb{,keepaspectratio\if@svg@param@distort=false\fi}%
    \ifdim\dimexpr\svg@param@scale\p@\relax=\p@\relax\else%
      \l@addto@macro\svg@tempb{,scale=\svg@param@scale}%
    \fi%
    \ifdim\dimexpr\svg@param@angle\p@\relax=\z@\relax\else%
      \l@addto@macro\svg@tempb{%
        ,origin=\svg@param@origin,angle=\svg@param@angle%
      }%
    \fi%
    \edef\svg@tempb{\svg@tempb}%
    \expandafter\includegraphics\expandafter[\svg@tempb]{\svg@tempa}%
  \fi%
}
\newcommand*\svg@param@size@check{%
  \begingroup%
    \ifdim\dimexpr\svg@param@scale\p@\relax=\p@\relax\else%
      \let\svg@tempb\@empty%
      \@for\svg@tempa:={scale,width,height}\do{%
        \edef\svg@tempb{%
          \unexpanded\expandafter{\svg@tempb}%
          {\svg@tempa}{\csname svg@param@\svg@tempa\endcsname}%
        }%
      }%
      \expandafter\svg@param@size@wrn\svg@tempb%
    \fi%
  \endgroup%
}
% TODO kann raus mit neuer Option size
\newcommand*\svg@param@size@wrn[6]{%
  \begingroup%
    \ifdim\dimexpr#2\p@\relax=\p@\relax\else%
      \let\svg@tempa\@empty%
      \ifdim#4>\z@\relax%
        \l@addto@macro\svg@tempa{#3=#4}%
      \fi%
      \ifdim#6>\z@\relax%
        \ifx\svg@tempa\@empty\else%
          \l@addto@macro\svg@tempa{,}%
        \fi%
        \l@addto@macro\svg@tempa{#5=#6}%
      \fi%
      \ifx\svg@tempa\@empty\else%
        \PackageWarning{svg}{%
          The parameter `#1=#2' is not applied\MessageBreak%
          because `\svg@tempa'\MessageBreak%
          is given as well%
        }%
      \fi%
    \fi%
  \endgroup%
}
\newcommand*\svg@get@lastpage[1]{%
  \begingroup%
    \@tempcnta=\m@ne\relax%
    \ifx\XeTeXpdfpagecount\@undefined%
      \ifx\pdfximage\@undefined%
        \ifx\saveimageresource\@undefined\else%
          \saveimageresource{#1}%
          \@tempcnta=\lastsavedimageresourcepages\relax%
        \fi%
      \else%
        \pdfximage{#1}%
        \@tempcnta=\pdflastximagepages\relax%
      \fi%
    \else%
      \@tempcnta=\XeTeXpdfpagecount#1\relax%
    \fi%
    \ifnum\@tempcnta>\z@\relax%
      \PackageInfo{svg}{Last page of `#1'\MessageBreak is `\the\@tempcnta'}%
      \def\svg@tempa{%
        \noexpand\FamilyExecuteOptions[.param]{SVG}{lastpage=\the\@tempcnta}%
      }%
    \else%
      \PackageWarning{svg}{%
        It wasn't possible to detect the last page\MessageBreak%
        of `#1'%
      }%
      \let\svg@tempa\@empty%
    \fi%
    \edef\svg@tempa{%
      \endgroup%
      \svg@tempa%
    }%
  \svg@tempa%
}
\newcommand*\svg@ink@error[3]{%
  \begingroup%
    \def\svg@tempa##1,##2,##3\@nil{%
      \edef\svg@tempb{%
        \noexpand\svg@quotes@normalize[{##1}]{\noexpand\svg@tempa}%
        \noexpand\svg@quotes@normalize[{##2}]{\noexpand\svg@tempb}%
      }%
      \svg@tempb%
    }%
    \svg@tempa#1,,\@nil%
    \edef\svg@tempa{%
      \endgroup%
      \begingroup%
      \def\noexpand\svg@tempa{%
        The file\ifx\svg@tempb\@empty\else s\fi\MessageBreak
        `\svg@tempa'%
        \ifx\svg@tempb\@empty\else%
          \noexpand\space and \noexpand\MessageBreak`\svg@tempb'%
        \fi%
      }%
      \noexpand\svg@quotes@normalize[{#2}]{\noexpand\svg@tempb}%
    }%
    \svg@tempa%
    \PackageError{svg}{%
      Inkscape export\IfArgIsEmpty{#3}{}{ for `#3'} is missing%
    }{%
      % TODO use text from \svg@troubleshooting
      \if@svg@ink@run%
        \ifnum\pdf@shellescape=\@ne\else%
          Most likely you should pass `--shell-escape' flag\MessageBreak%
          in order to launch the automated Inkscape export.\MessageBreak%
        \fi%
      \else%
        Did you run the Inkscape export%
        \if@svg@ink@latex\space with latex output\fi?\MessageBreak%
      \fi%
      \svg@tempa\MessageBreak%
      could not be found%
      \ifx\svg@tempb\@empty\else%
        \space although\MessageBreak`\svg@tempb'\MessageBreak exists%
        \if@svg@ink@run\else\if@svg@ink@latex%
          . Maybe you should use optional parameter\MessageBreak%
          `inkscapelatex=false'%
        \fi\fi%
      \fi.%
    }%
  \endgroup%
}
% TODO macro svg@missing@msg
\newcommand*\svg@troubleshooting[4]{%
  \PackageWarning{#1}{%
    #2 from input file\MessageBreak`#3'\MessageBreak%
    failed for output file\MessageBreak`#4'\MessageBreak%
    Troubleshooting: Check `\jobname.log' for\MessageBreak%
    > Package #1 Info:\MessageBreak%
    > #2 `#3'\MessageBreak%
    and try to examine occuring problems by executing\MessageBreak%
    following invocations manually%
  }%
}
\newcommand*\svg@ink@ver@settings{{\svg@ink@ver}{\svg@ink@exe}{\m@ne}}
\svg@newif\if@svg@ink@ver@detect
\newcommand*\svg@ink@ver@detect[3]{%
  \@svg@ink@ver@detectfalse%
  \ifnum\pdf@shellescape=\@ne\relax%
    \ifnum\svg@ink@ver=\m@ne\relax%
      \svg@sanitize@dq\svg@tempa{#2}%
      \ifx\svg@tempa\svg@ink@exe%
        \ifnum#1>\m@ne\relax%
          \@svg@ink@ver@detecttrue%
        \else%
          \ifnum#3=\m@ne\relax%
            \@svg@ink@ver@detecttrue%
          \fi%
        \fi%
      \else%
        \@svg@ink@ver@detecttrue%
      \fi%
    \fi%
  \fi%
  \edef\svg@ink@ver@settings{%
    {\svg@ink@ver}{\svg@ink@exe}{\noexpand\svg@ink@ver}%
  }%
  \if@svg@ink@ver@detect%
    \svg@ink@ver@@detect%
  \else%
    \ifnum\svg@ink@ver=\m@ne\relax%
      \def\svg@ink@ver{#3}%
    \fi%
  \fi%
}
\newcommand*\svg@ink@ver@@detect{%
  \begingroup%
    \@makeother\|%
    \endlinechar=\m@ne%
    \everyeof{\noexpand}%
    \svg@quotes@remove{\svg@ink@exe}%
    \edef\svg@tempa{%
      \edef\noexpand\svg@tempa{\noexpand\@@input|"'\svg@ink@exe'\space-V" }%
    }%
    \svg@tempa%
    \ifx\svg@tempa\@empty%
      \svg@ifwindowsdetected{%
        \def\svg@tempb{\jobname.svg.ink.ver.aux}%
        \IfFileExists{\svg@tempb}{}{%
          \ShellEscape{call "\svg@ink@exe" -V > \svg@tempb}%
          \openin\@inputcheck=\svg@tempb%
          \read\@inputcheck to\svg@tempa%
          \closein\@inputcheck%
          \ShellEscape{del \svg@tempb}%
        }%
      }{}%
    \fi%
    \def\svg@tempb Inkscape ##1.##2\@nil{%
      \gdef\svg@ink@ver{##1}%
    }%
    \expandafter\svg@tempb\svg@tempa Inkscape \m@ne.\@nil%
  \endgroup%
}
\AtBeginDocument{\expandafter\svg@ink@ver@detect\svg@ink@ver@settings}
\BeforeClosingMainAux{%
  \if@filesw%
    \immediate\write\@mainaux{%
      \string\gdef\string\svg@ink@ver@settings{\svg@ink@ver@settings}%
    }%
  \fi%
}
\newcommand*\svg@set@input@path[1][]{%
  \begingroup%
    \svg@deactivate@dq%
    \ifx\svg@file@path\@currdir%
      \let\svg@file@path\@empty%
    \fi%
    \ifx\svg@file@path\@empty\else%
      \svg@normalize@path{\svg@file@path}%
      \edef\svg@file@path{{\svg@file@path}}%
    \fi%
    \svg@append@input@path{\svg@file@path}{\svg@input@path}%
    \svg@append@input@path{\svg@file@path}{\Ginput@path}%
    \svg@ifstrblank{#1}{}{%
      \edef\svg@tempa{#1}%
      \svg@append@input@path{\svg@file@path}{{\svg@tempa}}%
    }%
    \svg@append@input@path{\svg@file@path}{\input@path}%
    \edef\svg@tempa{%
      \endgroup%
      \ifx\svg@file@path\@empty\else%
        \def\noexpand\input@path{\svg@file@path}%
      \fi%
    }%
  \svg@tempa%
}
\newcommand*\svg@append@input@path[2]{%
  \ifx#2\@undefined\else%
    \begingroup%
      \edef\svg@tempb{#2}%
      \expandafter\@tfor\expandafter\svg@tempa\expandafter:\expandafter=%
          \svg@tempb\do{%
        \svg@normalize@path{\svg@tempa}%
        \ifx\svg@tempa\@currdir\else%
          \@svg@tempswatrue%
          \expandafter\@tfor\expandafter\svg@tempb\expandafter:\expandafter=%
              #1\do{%
            \ifx\svg@tempa\svg@tempb%
              \@svg@tempswafalse%
              \@break@tfor%
            \fi%
          }%
          \if@svg@tempswa%
            \edef#1{#1{\svg@tempa}}%
          \fi%
        \fi%
      }%
      \edef\svg@tempb{%
        \endgroup%
        \def\noexpand#1{#1}%
      }%
    \svg@tempb%
  \fi%
}
\svg@newif\if@svg@file@found
\newcommand*\svg@file@path{}
\newcommand*\svg@file@name{}
\newcommand*\svg@file@base{}
\newcommand*\svg@get@@file{}
\newcommand*\svg@get@file{%
  \kernel@ifstar%
    {\let\svg@get@@file\@gobble\svg@get@@@file}%
    {\let\svg@get@@file\@firstofone\svg@get@@@file}%
}
\newcommand*\svg@get@@@file[3][]{%
  \begingroup%
    \svg@set@input@path[{#1}]%
    \svg@filename@parse[{#3}]{#2}%
    \ifx\filename@ext\relax%
      \edef\filename@ext{#3}%
    \fi%
    \svg@get@@@@file{\filename@area\filename@base.\filename@ext}%
    \if@svg@file@found\else%
      \svg@quotes@normalize*[\filename@base]{\svg@tempa}%
      \svg@get@@@@file{\filename@area\svg@tempa.\filename@ext}%
      \if@svg@file@found\else%
        \ifx\filename@ext\@empty%
          \let\filename@ext\relax%
        \fi%
      \fi%
    \fi%
    \if@svg@file@found%
      \svg@filename@parse[\filename@ext]{\@filef@und}%
      \edef\svg@file@path{%
        \ifx\filename@area\@empty\@currdir\else\filename@area\fi%
      }%
    \else%
      \edef\svg@file@path{\ifx\filename@area\@currdir\else\filename@area\fi}%
    \fi%
    \edef\svg@file@name{\filename@base}%
    \edef\svg@file@base{%
      \svg@file@path\svg@file@name\ifx\filename@ext\relax\else.\filename@ext\fi%
    }%
    \svg@quotes@normalize{\svg@file@base}%
    \if@svg@file@found\else%
      \svg@get@@file{%
        \edef\svg@tempb{\svg@file@name.#3}%
        \edef\svg@tempa{%
          There's no file `\svg@tempb'\MessageBreak%
          neither in\space%
          \ifx\svg@file@path\@empty%
            the current directory%
          \else%
            folder `\svg@file@path'%
          \fi%
          \space nor any other\MessageBreak searched path given by\space%
          \string\svgpath\space or \string\graphicspath. \MessageBreak%
        }%
        \ifx\input@path\@undefined%
          \edef\svg@tempa{\svg@tempa No additional path was given.}%
        \else%
          \edef\svg@tempa{%
            \svg@tempa Following folders have additionally been searched:%
          }%
          \expandafter\@tfor\expandafter\input@path\expandafter:\expandafter=%
              \input@path\do{%
            \edef\input@path{\input@path\svg@file@path}%
            \svg@normalize@path{\input@path}%
            \edef\svg@tempa{\svg@tempa\MessageBreak\input@path}%
          }%
          \edef\svg@tempa{\svg@tempa\MessageBreak No file was found.}%
        \fi%
        \PackageError{svg}{File `\svg@tempb' is missing}{\svg@tempa}%
      }%
    \fi%
    \edef\svg@tempa{%
      \endgroup%
      \if@svg@file@found%
        \noexpand\@svg@file@foundtrue%
      \else%
        \noexpand\@svg@file@foundfalse%
      \fi%
      \def\noexpand\svg@file@path{\svg@file@path}%
      \def\noexpand\svg@file@name{\svg@file@name}%
      \def\noexpand\svg@file@base{\svg@file@base}%
    }%
  \svg@tempa%
}
\newcommand*\svg@get@@@@file[1]{%
  \begingroup%
    \@svg@tempswafalse%
    \edef\svg@tempa{%
      \noexpand\svg@quotes@normalize[{#1}]{\noexpand\svg@tempa}%
      \noexpand\svg@quotes@remove*[{#1}]{\noexpand\svg@tempb}%
    }%
    \svg@tempa%
    \ifx\svg@tempb\@empty\else%
      \svg@filename@parse[\relax]{\svg@tempa}%
      \ifx\filename@area\@currdir%
        \let\filename@area\@empty%
      \fi%
      \edef\svg@tempa{\filename@area\filename@base}%
      \ifx\input@path\@undefined%
        \let\input@path\@empty%
      \fi%
      \edef\input@path{%
        {\@currdir}\ifx\filename@area\@empty\else{}\fi\input@path%
      }%
      \expandafter\@tfor\expandafter\svg@tempb\expandafter:\expandafter=%
          \input@path\do{%
        \edef\svg@tempb{\svg@tempb\svg@tempa}%
        \let\input@path\@undefined%
        \begingroup%
          \svg@quotes@remove*{\svg@tempb}%
          \IfFileExists{"\svg@tempb"}{\aftergroup\@svg@tempswatrue}{}%
        \endgroup%
        \if@svg@tempswa%
          \@break@tfor%
        \fi%
      }%
    \fi%
    \edef\svg@tempa{%
      \endgroup%
      \if@svg@tempswa%
        \def\noexpand\@filef@und{\svg@tempb}%
        \noexpand\@svg@file@foundtrue%
      \else%
        \noexpand\@svg@file@foundfalse%
      \fi%
    }%
  \svg@tempa%
}
\newcommand*\svg@normalize@name[3]{%
  \begingroup%
    \svg@sanitize@dq\svg@tempa{\csname #3@name\endcsname}%
    \svg@filename@parse[\relax]{\svg@tempa}%
    \ifx\filename@area\@empty\else%
      \PackageWarning{#1}{%
        You've tried to setup `#2name=\svg@tempa'\MessageBreak%
        with a preceeded path. This is not recommended. You\MessageBreak%
        should use `#2path=\filename@area'\MessageBreak%
        and `#2name=\filename@base'\MessageBreak%
        instead, which is done now%
      }%
    \fi%
    \ifx\filename@base\@empty%
      \PackageError{#1}{`#2name' is empty}{%
        The file name given with option `#2name' is empty.%
      }%
    \fi%
    \edef\svg@tempb{%
      \endgroup%
      \ifx\filename@area\@empty\else%
        \noexpand\@namedef{#3@path}{\filename@area}%
      \fi%
      \noexpand\@namedef{#3@name}{\filename@base}%
    }%
  \svg@tempb%
}
\newcommand*\svg@picture@saved{}
\let\svg@picture@saved\picture
\newcommand*\svg@includegraphics@saved{}
\let\svg@includegraphics@saved\includegraphics
\newcommand*\svg@patches[1]{%
  \let\picture\svg@picture@patched%
  \let\includegraphics\svg@includegraphics@patched%
  \edef\svg@includegraphics@file{#1}%
}
\newcommand*\svg@picture@patched{}
\newcommand*\svg@pictur@patched{}
\long\def\svg@picture@patched#1{\svg@pictur@patched@#1}
\def\svg@pictur@patched@(#1,#2){%
  \ifdim\svg@param@height>\z@\relax%
    \Gscale@div\svg@tempa{#1\p@}{#2\p@}%
    \setlength\unitlength{\svg@param@height}%
    \setlength\unitlength{\svg@tempa\unitlength}%
    \ifdim\svg@param@width>\z@\relax%
      \ifdim\unitlength>\svg@param@width\relax%
        \setlength\unitlength{\svg@param@width}%
      \fi%
    \fi%
  \else%
    \ifdim\svg@param@width>\z@\relax%
      \setlength\unitlength{\svg@param@width}%
    \else%
      \setlength\unitlength{\svg@param@scale\unitlength}%
    \fi%
  \fi%
  \svg@picture@saved(#1,#2)%
}
\DefineFamily{SVGpatch}
\DefineFamilyMember{SVGpatch}
\newcounter{svg@param@currpage}
\setcounter{svg@param@currpage}{\m@ne}
\FamilyCounterKey{SVGpatch}{page}{svg@param@currpage}
\DefineFamilyKey{SVGpatch}{width}{\FamilyKeyStateProcessed}
\newcommand*\svg@includegraphics@file{}
\newcommand*\svg@includegraphics@patched[2][]{%
  \FamilyOptions{SVGpatch}{#1}%
  \ifnum\value{svg@param@lastpage}<\z@\relax%
    \FamilySetCounter{SVGpatch}{page}{svg@param@currpage}{%
      \the\value{svg@param@lastpage}%
    }%
  \fi%
  \ifnum\value{svg@param@currpage}>\value{svg@param@lastpage}\relax\else%
    \svg@includegraphics@saved[{#1}]{\svg@includegraphics@file}%
  \fi%
}
\newcommand*\svg@transparent[1]{%
  \PackageWarning{svg}{%
    The command \string\transparent\space does not exist yet,\MessageBreak%
    so it is defined as a gobbling auxiliary macro by now. \MessageBreak%
    Maybe you should load package `transparent'\MessageBreak%
  }%
  \global\let\transparent\@gobble%
}
\newcommand*\svghidepreamblestart{%
  \PackageWarning{svg}{%
    The macro `\string\svghidepreamblestart' is only meant\MessageBreak%
    to be used together with package `svg-extract'. \MessageBreak%
    Nevertheless, nothing will happen%
  }%
}
\newcommand*\svghidepreambleend{%
  \PackageWarning{svg}{%
    The macro `\string\svghidepreambleend' is only meant\MessageBreak%
    to be used together with package `svg-extract'. \MessageBreak%
    Nevertheless, nothing will happen%
  }%
}
\newcommand*\includesvgx{%
  \PackageError{svg}{Package `svg-extract' not loaded}{%
    The macro `\string\includesvgx' can only\MessageBreak%
    be used together with package `svg-extract'.%
  }%
}
\newcommand*\includeinkscapex{%
  \PackageError{svg}{Package `svg-extract' not loaded}{%
    The macro `\string\includeinkscapex' can only\MessageBreak%
    be used together with package `svg-extract'.%
  }%
}
\endinput
%%
%% End of file `svg.sty'.
